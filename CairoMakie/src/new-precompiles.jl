using Base: UUID

isdefined(CairoMakie, :StatsFuns) || const StatsFuns = Base.require(Base.PkgId(UUID("4c63d2b9-4356-54db-8cca-17b64c39e42c"), "StatsFuns"))
isdefined(CairoMakie, :OpenSSL_jll) || const OpenSSL_jll = Base.require(Base.PkgId(UUID("458c3c95-2e84-50aa-8efc-19380b2a3a95"), "OpenSSL_jll"))
isdefined(CairoMakie, :libass_jll) || const libass_jll = Base.require(Base.PkgId(UUID("0ac62f75-1d6f-5e53-bd7c-93b484bb37c0"), "libass_jll"))
isdefined(CairoMakie, :EllipsisNotation) || const EllipsisNotation = Base.require(Base.PkgId(UUID("da5c29d0-fa7d-589e-88eb-ea29b0a81949"), "EllipsisNotation"))
isdefined(CairoMakie, :Interpolations) || const Interpolations = Base.require(Base.PkgId(UUID("a98d9a8b-a2ab-59e6-89dd-64a1c18fca59"), "Interpolations"))
isdefined(CairoMakie, :GridLayoutBase) || const GridLayoutBase = Base.require(Base.PkgId(UUID("3955a311-db13-416c-9275-1d80ed98e5e9"), "GridLayoutBase"))
isdefined(CairoMakie, :DataStructures) || const DataStructures = Base.require(Base.PkgId(UUID("864edb3b-99cc-5e75-8d2d-829cb0a9cfe8"), "DataStructures"))
isdefined(CairoMakie, :Calculus) || const Calculus = Base.require(Base.PkgId(UUID("49dc2e85-a5d0-5ad3-a950-438e2897f1b9"), "Calculus"))
isdefined(CairoMakie, :REPL) || const REPL = Base.require(Base.PkgId(UUID("3fa0cd96-eef1-5676-8a61-b3b8758bbffb"), "REPL"))
isdefined(CairoMakie, :NetworkOptions) || const NetworkOptions = Base.require(Base.PkgId(UUID("ca575930-c2e3-43a9-ace4-1e988b2c1908"), "NetworkOptions"))
isdefined(CairoMakie, :ColorSchemes) || const ColorSchemes = Base.require(Base.PkgId(UUID("35d6a980-a343-548e-a6ea-1d62b119f2f4"), "ColorSchemes"))
isdefined(CairoMakie, :FreeType2_jll) || const FreeType2_jll = Base.require(Base.PkgId(UUID("d7e528f0-a631-5988-bf34-fe36492bcfd7"), "FreeType2_jll"))
isdefined(CairoMakie, :StaticArrays) || const StaticArrays = Base.require(Base.PkgId(UUID("90137ffa-7385-5640-81b9-e52037218182"), "StaticArrays"))
isdefined(CairoMakie, :ChangesOfVariables) || const ChangesOfVariables = Base.require(Base.PkgId(UUID("9e997f8a-9a97-42d5-a9f1-ce6bfc15e2c0"), "ChangesOfVariables"))
isdefined(CairoMakie, :StatsBase) || const StatsBase = Base.require(Base.PkgId(UUID("2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91"), "StatsBase"))
isdefined(CairoMakie, :AbstractFFTs) || const AbstractFFTs = Base.require(Base.PkgId(UUID("621f4979-c628-5d54-868e-fcf4e3e8185c"), "AbstractFFTs"))
isdefined(CairoMakie, :LaTeXStrings) || const LaTeXStrings = Base.require(Base.PkgId(UUID("b964fa9f-0449-5b57-a5c2-d3ea65f4040f"), "LaTeXStrings"))
isdefined(CairoMakie, :ImageIO) || const ImageIO = Base.require(Base.PkgId(UUID("82e4d734-157c-48bb-816b-45c225c6df19"), "ImageIO"))
isdefined(CairoMakie, :PDMats) || const PDMats = Base.require(Base.PkgId(UUID("90014a1f-27ba-587c-ab20-58faa44d9150"), "PDMats"))
isdefined(CairoMakie, :XML2_jll) || const XML2_jll = Base.require(Base.PkgId(UUID("02c8fc9c-b97f-50b9-bbe4-9be30ff0a78a"), "XML2_jll"))
isdefined(CairoMakie, :SuiteSparse) || const SuiteSparse = Base.require(Base.PkgId(UUID("4607b0f0-06f3-5cda-b6b1-a6196a1729e9"), "SuiteSparse"))
isdefined(CairoMakie, :Graphite2_jll) || const Graphite2_jll = Base.require(Base.PkgId(UUID("3b182d85-2403-5c21-9c21-1e1f0cc25472"), "Graphite2_jll"))
isdefined(CairoMakie, :SignedDistanceFields) || const SignedDistanceFields = Base.require(Base.PkgId(UUID("73760f76-fbc4-59ce-8f25-708e95d2df96"), "SignedDistanceFields"))
isdefined(CairoMakie, :Tables) || const Tables = Base.require(Base.PkgId(UUID("bd369af6-aec1-5ad0-b16a-f7cc5008161c"), "Tables"))
isdefined(CairoMakie, :LinearAlgebra) || const LinearAlgebra = Base.require(Base.PkgId(UUID("37e2e46d-f89d-539d-b4ee-838fcccc9c8e"), "LinearAlgebra"))
isdefined(CairoMakie, :Random) || const Random = Base.require(Base.PkgId(UUID("9a3f8284-a2c9-5f02-9a11-845980a1fd5c"), "Random"))
isdefined(CairoMakie, :PolygonOps) || const PolygonOps = Base.require(Base.PkgId(UUID("647866c9-e3ac-4575-94e7-e3d426903924"), "PolygonOps"))
isdefined(CairoMakie, :Isoband) || const Isoband = Base.require(Base.PkgId(UUID("f1662d9f-8043-43de-a69a-05efc1cc6ff4"), "Isoband"))
isdefined(CairoMakie, :ArrayInterface) || const ArrayInterface = Base.require(Base.PkgId(UUID("4fba245c-0d91-5ea0-9b3e-6abc04ee57a9"), "ArrayInterface"))
isdefined(CairoMakie, :IteratorInterfaceExtensions) || const IteratorInterfaceExtensions = Base.require(Base.PkgId(UUID("82899510-4779-5014-852e-03e436cf321d"), "IteratorInterfaceExtensions"))
isdefined(CairoMakie, :Bzip2_jll) || const Bzip2_jll = Base.require(Base.PkgId(UUID("6e34b625-4abd-537c-b88f-471c36dfa7a0"), "Bzip2_jll"))
isdefined(CairoMakie, :Cairo) || const Cairo = Base.require(Base.PkgId(UUID("159f3aea-2a34-519c-b102-8c37f9878175"), "Cairo"))
isdefined(CairoMakie, :TensorCore) || const TensorCore = Base.require(Base.PkgId(UUID("62fd8b95-f654-4bbd-a8a5-9c27f68ccd50"), "TensorCore"))
isdefined(CairoMakie, :StatsAPI) || const StatsAPI = Base.require(Base.PkgId(UUID("82ae8749-77ed-4fe6-ae5f-f523153014b0"), "StatsAPI"))
isdefined(CairoMakie, :LazyArtifacts) || const LazyArtifacts = Base.require(Base.PkgId(UUID("4af54fe1-eca0-43a8-85a7-787d91b784e3"), "LazyArtifacts"))
isdefined(CairoMakie, :Tar) || const Tar = Base.require(Base.PkgId(UUID("a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e"), "Tar"))
isdefined(CairoMakie, :Test) || const Test = Base.require(Base.PkgId(UUID("8dfed614-e22c-5e08-85e1-65c5234f0b40"), "Test"))
isdefined(CairoMakie, :Future) || const Future = Base.require(Base.PkgId(UUID("9fa8497b-333b-5362-9e8d-4d0656e87820"), "Future"))
isdefined(CairoMakie, :Contour) || const Contour = Base.require(Base.PkgId(UUID("d38c429a-6771-53c6-b99e-75d170b6e991"), "Contour"))
isdefined(CairoMakie, :FFTW) || const FFTW = Base.require(Base.PkgId(UUID("7a1cc6ca-52ef-59f5-83cd-3a7055c09341"), "FFTW"))
isdefined(CairoMakie, :FileWatching) || const FileWatching = Base.require(Base.PkgId(UUID("7b1f6079-737a-58dc-b8bc-7a2ca5c1b5ee"), "FileWatching"))
isdefined(CairoMakie, :Artifacts) || const Artifacts = Base.require(Base.PkgId(UUID("56f22d72-fd6d-98f1-02f0-08ddc0907c33"), "Artifacts"))
isdefined(CairoMakie, :Dates) || const Dates = Base.require(Base.PkgId(UUID("ade2ca70-3891-5945-98fb-dc099432e06a"), "Dates"))
isdefined(CairoMakie, :CEnum) || const CEnum = Base.require(Base.PkgId(UUID("fa961155-64e5-5f13-b03f-caf6b980ea82"), "CEnum"))
isdefined(CairoMakie, :JLLWrappers) || const JLLWrappers = Base.require(Base.PkgId(UUID("692b3bcd-3c85-4b1f-b108-f13ce0eb3210"), "JLLWrappers"))
isdefined(CairoMakie, :OffsetArrays) || const OffsetArrays = Base.require(Base.PkgId(UUID("6fe1bfb0-de20-5000-8ca7-80f57d26f881"), "OffsetArrays"))
isdefined(CairoMakie, :ColorTypes) || const ColorTypes = Base.require(Base.PkgId(UUID("3da002f7-5984-5a60-b8a6-cbb66c0b333f"), "ColorTypes"))
isdefined(CairoMakie, :ColorVectorSpace) || const ColorVectorSpace = Base.require(Base.PkgId(UUID("c3611d14-8923-5661-9e6a-0046d554d3a4"), "ColorVectorSpace"))
isdefined(CairoMakie, :Gettext_jll) || const Gettext_jll = Base.require(Base.PkgId(UUID("78b55507-aeef-58d4-861c-77aaff3498b1"), "Gettext_jll"))
isdefined(CairoMakie, :Downloads) || const Downloads = Base.require(Base.PkgId(UUID("f43a241f-c20a-4ad4-852c-f6b1247861c6"), "Downloads"))
isdefined(CairoMakie, :TableTraits) || const TableTraits = Base.require(Base.PkgId(UUID("3783bdb8-4a98-5b6b-af9a-565f29a5fe9c"), "TableTraits"))
isdefined(CairoMakie, :Rmath_jll) || const Rmath_jll = Base.require(Base.PkgId(UUID("f50d1b31-88e8-58de-be2c-1cc44531875f"), "Rmath_jll"))
isdefined(CairoMakie, :Match) || const Match = Base.require(Base.PkgId(UUID("7eb4fadd-790c-5f42-8a69-bfa0b872bfbf"), "Match"))
isdefined(CairoMakie, :FixedPointNumbers) || const FixedPointNumbers = Base.require(Base.PkgId(UUID("53c48c17-4a7d-5ca2-90c5-79b7896eea93"), "FixedPointNumbers"))
isdefined(CairoMakie, :Pango_jll) || const Pango_jll = Base.require(Base.PkgId(UUID("36c8627f-9965-5494-a995-c6b170f724f3"), "Pango_jll"))
isdefined(CairoMakie, :FillArrays) || const FillArrays = Base.require(Base.PkgId(UUID("1a297f60-69ca-5386-bcde-b61e274b549b"), "FillArrays"))
isdefined(CairoMakie, :Serialization) || const Serialization = Base.require(Base.PkgId(UUID("9e88b42a-f829-5b0c-bbe9-9e923198166b"), "Serialization"))
isdefined(CairoMakie, :libpng_jll) || const libpng_jll = Base.require(Base.PkgId(UUID("b53b4c65-9356-5827-b1ea-8c7a1a84506f"), "libpng_jll"))
isdefined(CairoMakie, :libfdk_aac_jll) || const libfdk_aac_jll = Base.require(Base.PkgId(UUID("f638f0a6-7fb0-5443-88ba-1cc74229b280"), "libfdk_aac_jll"))
isdefined(CairoMakie, :OpenLibm_jll) || const OpenLibm_jll = Base.require(Base.PkgId(UUID("05823500-19ac-5b8b-9628-191a04bc5112"), "OpenLibm_jll"))
isdefined(CairoMakie, :UUIDs) || const UUIDs = Base.require(Base.PkgId(UUID("cf7118a7-6976-5b1a-9a39-7adc72f591a4"), "UUIDs"))
isdefined(CairoMakie, :InverseFunctions) || const InverseFunctions = Base.require(Base.PkgId(UUID("3587e190-3f89-42d0-90ee-14403ec27112"), "InverseFunctions"))
isdefined(CairoMakie, :Logging) || const Logging = Base.require(Base.PkgId(UUID("56ddb016-857b-54e1-b83d-db4d58db5568"), "Logging"))
isdefined(CairoMakie, :CairoMakie) || const CairoMakie = Base.require(Base.PkgId(UUID("13f3f980-e62b-5c42-98c6-ff1f3baf88f0"), "CairoMakie"))
isdefined(CairoMakie, :Distributions) || const Distributions = Base.require(Base.PkgId(UUID("31c24e10-a181-5473-b8eb-7969acd0382f"), "Distributions"))
isdefined(CairoMakie, :Graphics) || const Graphics = Base.require(Base.PkgId(UUID("a2bd30eb-e257-5431-a919-1863eab51364"), "Graphics"))
isdefined(CairoMakie, :ArgTools) || const ArgTools = Base.require(Base.PkgId(UUID("0dad84c5-d112-42e6-8d28-ef12dabb789f"), "ArgTools"))
isdefined(CairoMakie, :Statistics) || const Statistics = Base.require(Base.PkgId(UUID("10745b16-79ce-11e8-11f9-7d13ad32a3b2"), "Statistics"))
isdefined(CairoMakie, :WoodburyMatrices) || const WoodburyMatrices = Base.require(Base.PkgId(UUID("efce3f68-66dc-5838-9240-27a6d6f5f9b6"), "WoodburyMatrices"))
isdefined(CairoMakie, :CompilerSupportLibraries_jll) || const CompilerSupportLibraries_jll = Base.require(Base.PkgId(UUID("e66e0078-7015-5450-92f7-15fbd957f2ae"), "CompilerSupportLibraries_jll"))
isdefined(CairoMakie, :MozillaCACerts_jll) || const MozillaCACerts_jll = Base.require(Base.PkgId(UUID("14a3606d-f60d-562e-9121-12d972cd8159"), "MozillaCACerts_jll"))
isdefined(CairoMakie, :Distributed) || const Distributed = Base.require(Base.PkgId(UUID("8ba89e20-285c-5b6f-9357-94700520ee1b"), "Distributed"))
isdefined(CairoMakie, :IterTools) || const IterTools = Base.require(Base.PkgId(UUID("c8e1da08-722c-5040-9ed9-7db0dc04731e"), "IterTools"))
isdefined(CairoMakie, :LibCURL_jll) || const LibCURL_jll = Base.require(Base.PkgId(UUID("deac9b47-8bc7-5906-a0fe-35ac56dc84c0"), "LibCURL_jll"))
isdefined(CairoMakie, :nghttp2_jll) || const nghttp2_jll = Base.require(Base.PkgId(UUID("8e850ede-7688-5339-a07c-302acd2aaf8d"), "nghttp2_jll"))
isdefined(CairoMakie, :SharedArrays) || const SharedArrays = Base.require(Base.PkgId(UUID("1a1011a3-84de-559e-8e89-a11a2f7dc383"), "SharedArrays"))
isdefined(CairoMakie, :SHA) || const SHA = Base.require(Base.PkgId(UUID("ea8e919c-243c-51af-8825-aaa63cd721ce"), "SHA"))
isdefined(CairoMakie, :p7zip_jll) || const p7zip_jll = Base.require(Base.PkgId(UUID("3f19e933-33d8-53b3-aaab-bd5110c3b7a0"), "p7zip_jll"))
isdefined(CairoMakie, :MathTeXEngine) || const MathTeXEngine = Base.require(Base.PkgId(UUID("0a4f8689-d25c-4efe-a92b-7142dfc1aa53"), "MathTeXEngine"))
isdefined(CairoMakie, :LAME_jll) || const LAME_jll = Base.require(Base.PkgId(UUID("c1c5ebd0-6772-5130-a774-d5fcae4a789d"), "LAME_jll"))
isdefined(CairoMakie, :Pixman_jll) || const Pixman_jll = Base.require(Base.PkgId(UUID("30392449-352a-5448-841d-b1acce4e97dc"), "Pixman_jll"))
isdefined(CairoMakie, :Cairo_jll) || const Cairo_jll = Base.require(Base.PkgId(UUID("83423d85-b0ee-5818-9007-b63ccbeb887a"), "Cairo_jll"))
isdefined(CairoMakie, :Preferences) || const Preferences = Base.require(Base.PkgId(UUID("21216c6a-2e73-6563-6e65-726566657250"), "Preferences"))
isdefined(CairoMakie, :EarCut_jll) || const EarCut_jll = Base.require(Base.PkgId(UUID("5ae413db-bbd1-5e63-b57d-d24a61df00f5"), "EarCut_jll"))
isdefined(CairoMakie, :Parsers) || const Parsers = Base.require(Base.PkgId(UUID("69de0a69-1ddd-5017-9359-2bf0b02dc9f0"), "Parsers"))
isdefined(CairoMakie, :Compat) || const Compat = Base.require(Base.PkgId(UUID("34da2185-b29b-5c13-b0c7-acf172513d20"), "Compat"))
isdefined(CairoMakie, :Animations) || const Animations = Base.require(Base.PkgId(UUID("27a7e980-b3e6-11e9-2bcd-0b925532e340"), "Animations"))
isdefined(CairoMakie, :Unicode) || const Unicode = Base.require(Base.PkgId(UUID("4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5"), "Unicode"))
isdefined(CairoMakie, :Glib_jll) || const Glib_jll = Base.require(Base.PkgId(UUID("7746bdde-850d-59dc-9ae8-88ece973131d"), "Glib_jll"))
isdefined(CairoMakie, :OrderedCollections) || const OrderedCollections = Base.require(Base.PkgId(UUID("bac558e1-5e72-5ebc-8fee-abe8a469f55d"), "OrderedCollections"))
isdefined(CairoMakie, :Observables) || const Observables = Base.require(Base.PkgId(UUID("510215fc-4207-5dde-b226-833fc4488ee2"), "Observables"))
isdefined(CairoMakie, :Requires) || const Requires = Base.require(Base.PkgId(UUID("ae029012-a4dd-5104-9daa-d747884805df"), "Requires"))
isdefined(CairoMakie, :Ogg_jll) || const Ogg_jll = Base.require(Base.PkgId(UUID("e7412a2a-1a6e-54c0-be00-318e2571c051"), "Ogg_jll"))
isdefined(CairoMakie, :Makie) || const Makie = Base.require(Base.PkgId(UUID("ee78f7c6-11fb-53f2-987a-cfe4a2b5a57a"), "Makie"))
isdefined(CairoMakie, :HypergeometricFunctions) || const HypergeometricFunctions = Base.require(Base.PkgId(UUID("34004b35-14d8-5ef3-9330-4cdb6864b03a"), "HypergeometricFunctions"))
isdefined(CairoMakie, :DataValueInterfaces) || const DataValueInterfaces = Base.require(Base.PkgId(UUID("e2d170a0-9d28-54be-80f0-106bbe20a464"), "DataValueInterfaces"))
isdefined(CairoMakie, :x265_jll) || const x265_jll = Base.require(Base.PkgId(UUID("dfaa095f-4041-5dcd-9319-2fabd8486b76"), "x265_jll"))
isdefined(CairoMakie, :Automa) || const Automa = Base.require(Base.PkgId(UUID("67c07d97-cdcb-5c2c-af73-a7f9c32a568b"), "Automa"))
isdefined(CairoMakie, :Profile) || const Profile = Base.require(Base.PkgId(UUID("9abbd945-dff8-562f-b5e8-e1ebf5ef1b79"), "Profile"))
isdefined(CairoMakie, :x264_jll) || const x264_jll = Base.require(Base.PkgId(UUID("1270edf5-f2f9-52d2-97e9-ab00b5d0237a"), "x264_jll"))
isdefined(CairoMakie, :KernelDensity) || const KernelDensity = Base.require(Base.PkgId(UUID("5ab0869b-81aa-558d-bb23-cbf5423bbe9b"), "KernelDensity"))
isdefined(CairoMakie, :Reexport) || const Reexport = Base.require(Base.PkgId(UUID("189a3867-3050-52da-a836-e630ba90ab69"), "Reexport"))
isdefined(CairoMakie, :Zlib_jll) || const Zlib_jll = Base.require(Base.PkgId(UUID("83775a58-1f1d-513f-b197-d71354ab007a"), "Zlib_jll"))
isdefined(CairoMakie, :DocStringExtensions) || const DocStringExtensions = Base.require(Base.PkgId(UUID("ffbed154-4ef7-542d-bbb7-c09d3a79fcae"), "DocStringExtensions"))
isdefined(CairoMakie, :AbstractTrees) || const AbstractTrees = Base.require(Base.PkgId(UUID("1520ce14-60c1-5f80-bbc7-55ef81b5835c"), "AbstractTrees"))
isdefined(CairoMakie, :IrrationalConstants) || const IrrationalConstants = Base.require(Base.PkgId(UUID("92d709cd-6900-40b7-9082-c6be49f344b6"), "IrrationalConstants"))
isdefined(CairoMakie, :IntervalSets) || const IntervalSets = Base.require(Base.PkgId(UUID("8197267c-284f-5f27-9208-e0e47529a953"), "IntervalSets"))
isdefined(CairoMakie, :Packing) || const Packing = Base.require(Base.PkgId(UUID("19eb6ba3-879d-56ad-ad62-d5c202156566"), "Packing"))
isdefined(CairoMakie, :Expat_jll) || const Expat_jll = Base.require(Base.PkgId(UUID("2e619515-83b5-522b-bb60-26c02a35a201"), "Expat_jll"))
isdefined(CairoMakie, :Markdown) || const Markdown = Base.require(Base.PkgId(UUID("d6f4376e-aef5-505a-96c1-9c027394607a"), "Markdown"))
isdefined(CairoMakie, :AxisAlgorithms) || const AxisAlgorithms = Base.require(Base.PkgId(UUID("13072b0f-2c55-5437-9ae7-d433b7a33950"), "AxisAlgorithms"))
isdefined(CairoMakie, :SpecialFunctions) || const SpecialFunctions = Base.require(Base.PkgId(UUID("276daf66-3868-5448-9aa4-cd146d93841b"), "SpecialFunctions"))
isdefined(CairoMakie, :Static) || const Static = Base.require(Base.PkgId(UUID("aedffcd0-7271-4cad-89d0-dc628f76c6d3"), "Static"))
isdefined(CairoMakie, :TOML) || const TOML = Base.require(Base.PkgId(UUID("fa267f1f-6049-4f14-aa54-33bafae1ed76"), "TOML"))
isdefined(CairoMakie, :LibGit2) || const LibGit2 = Base.require(Base.PkgId(UUID("76f85450-5226-5b5a-8eaa-529ad045b433"), "LibGit2"))
isdefined(CairoMakie, :Mmap) || const Mmap = Base.require(Base.PkgId(UUID("a63ad114-7e13-5084-954f-fe012c677804"), "Mmap"))
isdefined(CairoMakie, :SortingAlgorithms) || const SortingAlgorithms = Base.require(Base.PkgId(UUID("a2af1166-a08f-5f64-846c-94a0d3cef48c"), "SortingAlgorithms"))
isdefined(CairoMakie, :Sockets) || const Sockets = Base.require(Base.PkgId(UUID("6462fe0b-24de-5631-8697-dd941f90decc"), "Sockets"))
isdefined(CairoMakie, :LZO_jll) || const LZO_jll = Base.require(Base.PkgId(UUID("dd4b983a-f0e5-5f8d-a1b7-129d4a5fb1ac"), "LZO_jll"))
isdefined(CairoMakie, :Libdl) || const Libdl = Base.require(Base.PkgId(UUID("8f399da3-3557-5675-b5ff-fb832c97cbdb"), "Libdl"))
isdefined(CairoMakie, :libvorbis_jll) || const libvorbis_jll = Base.require(Base.PkgId(UUID("f27f6e37-5d2b-51aa-960f-b287f2bc3b7a"), "libvorbis_jll"))
isdefined(CairoMakie, :Formatting) || const Formatting = Base.require(Base.PkgId(UUID("59287772-0a20-5a39-b81b-1366585eb4c0"), "Formatting"))
isdefined(CairoMakie, :DualNumbers) || const DualNumbers = Base.require(Base.PkgId(UUID("fa6b7ba4-c1ee-5f82-b5fc-ecf0adba8f74"), "DualNumbers"))
isdefined(CairoMakie, :InteractiveUtils) || const InteractiveUtils = Base.require(Base.PkgId(UUID("b77e0a4c-d291-57a0-90e8-8db25a27a240"), "InteractiveUtils"))
isdefined(CairoMakie, :ChainRulesCore) || const ChainRulesCore = Base.require(Base.PkgId(UUID("d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"), "ChainRulesCore"))
isdefined(CairoMakie, :QuadGK) || const QuadGK = Base.require(Base.PkgId(UUID("1fd47b50-473d-5c70-9696-f719f8f3bcdc"), "QuadGK"))
isdefined(CairoMakie, :LibCURL) || const LibCURL = Base.require(Base.PkgId(UUID("b27032c2-a3e7-50c8-80cd-2d36dbcbfd21"), "LibCURL"))
isdefined(CairoMakie, :UnicodeFun) || const UnicodeFun = Base.require(Base.PkgId(UUID("1cfade01-22cf-5700-b092-accc4b62d6e1"), "UnicodeFun"))
isdefined(CairoMakie, :SIMD) || const SIMD = Base.require(Base.PkgId(UUID("fdea26ae-647d-5447-a871-4b548cad5224"), "SIMD"))
isdefined(CairoMakie, :TranscodingStreams) || const TranscodingStreams = Base.require(Base.PkgId(UUID("3bb67fe8-82b1-5028-8e26-92a6c54297fa"), "TranscodingStreams"))
isdefined(CairoMakie, :Fontconfig_jll) || const Fontconfig_jll = Base.require(Base.PkgId(UUID("a3f928ae-7b40-5064-980b-68af3947d34b"), "Fontconfig_jll"))
isdefined(CairoMakie, :Rmath) || const Rmath = Base.require(Base.PkgId(UUID("79098fc4-a85e-5d69-aa6a-4863f24498fa"), "Rmath"))
isdefined(CairoMakie, :Opus_jll) || const Opus_jll = Base.require(Base.PkgId(UUID("91d4177d-7536-5919-b921-800302f37372"), "Opus_jll"))
isdefined(CairoMakie, :NaNMath) || const NaNMath = Base.require(Base.PkgId(UUID("77ba4419-2d1f-58cd-9bb1-8ffee604a2e3"), "NaNMath"))
isdefined(CairoMakie, :GeometryBasics) || const GeometryBasics = Base.require(Base.PkgId(UUID("5c1252a2-5f33-56bf-86c9-59e7332b4326"), "GeometryBasics"))
isdefined(CairoMakie, :Ratios) || const Ratios = Base.require(Base.PkgId(UUID("c84ed2f1-dad5-54f0-aa8e-dbefe2724439"), "Ratios"))
isdefined(CairoMakie, :MakieCore) || const MakieCore = Base.require(Base.PkgId(UUID("20f20a25-4f0e-4fdf-b5d1-57303727442b"), "MakieCore"))
isdefined(CairoMakie, :FFMPEG) || const FFMPEG = Base.require(Base.PkgId(UUID("c87230d0-a227-11e9-1b43-d7ebe4e7570a"), "FFMPEG"))
isdefined(CairoMakie, :FreeType) || const FreeType = Base.require(Base.PkgId(UUID("b38be410-82b0-50bf-ab77-7b57e271db43"), "FreeType"))
isdefined(CairoMakie, :DelimitedFiles) || const DelimitedFiles = Base.require(Base.PkgId(UUID("8bb1440f-4735-579b-a4ab-409b98df4dab"), "DelimitedFiles"))
isdefined(CairoMakie, :HarfBuzz_jll) || const HarfBuzz_jll = Base.require(Base.PkgId(UUID("2e76f6c2-a576-52d4-95c1-20adfe4de566"), "HarfBuzz_jll"))
isdefined(CairoMakie, :JSON) || const JSON = Base.require(Base.PkgId(UUID("682c06a0-de6a-54ab-a142-c8b1cf79cde6"), "JSON"))
isdefined(CairoMakie, :ColorBrewer) || const ColorBrewer = Base.require(Base.PkgId(UUID("a2cac450-b92f-5266-8821-25eda20663c8"), "ColorBrewer"))
isdefined(CairoMakie, :PlotUtils) || const PlotUtils = Base.require(Base.PkgId(UUID("995b91a9-d308-5afd-9ec6-746e21dbc043"), "PlotUtils"))
isdefined(CairoMakie, :Printf) || const Printf = Base.require(Base.PkgId(UUID("de0858da-6303-5e67-8744-51eddeeeb8d7"), "Printf"))
isdefined(CairoMakie, :PCRE_jll) || const PCRE_jll = Base.require(Base.PkgId(UUID("2f80f16e-611a-54ab-bc61-aa92de5b98fc"), "PCRE_jll"))
isdefined(CairoMakie, :SparseArrays) || const SparseArrays = Base.require(Base.PkgId(UUID("2f01184e-e22b-5df5-ae63-d93ebab69eaf"), "SparseArrays"))
isdefined(CairoMakie, :IfElse) || const IfElse = Base.require(Base.PkgId(UUID("615f187c-cbe4-4ef1-ba3b-2fcf58d6d173"), "IfElse"))
isdefined(CairoMakie, :Libiconv_jll) || const Libiconv_jll = Base.require(Base.PkgId(UUID("94ce4f54-9a6c-5748-9c1c-f9c7231a4531"), "Libiconv_jll"))
isdefined(CairoMakie, :RelocatableFolders) || const RelocatableFolders = Base.require(Base.PkgId(UUID("05181044-ff0b-4ac5-8273-598c1e38db00"), "RelocatableFolders"))
isdefined(CairoMakie, :Adapt) || const Adapt = Base.require(Base.PkgId(UUID("79e6a3ab-5dfb-504d-930d-738a2a938a0e"), "Adapt"))
isdefined(CairoMakie, :Libffi_jll) || const Libffi_jll = Base.require(Base.PkgId(UUID("e9f186c6-92d2-5b65-8a66-fee21dc1b490"), "Libffi_jll"))
isdefined(CairoMakie, :FreeTypeAbstraction) || const FreeTypeAbstraction = Base.require(Base.PkgId(UUID("663a7486-cb36-511b-a19d-713bb74d65c9"), "FreeTypeAbstraction"))
isdefined(CairoMakie, :Base64) || const Base64 = Base.require(Base.PkgId(UUID("2a0f44e3-6c83-55bd-87e4-b1978d98bd5f"), "Base64"))
isdefined(CairoMakie, :DataAPI) || const DataAPI = Base.require(Base.PkgId(UUID("9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a"), "DataAPI"))
isdefined(CairoMakie, :CRC32c) || const CRC32c = Base.require(Base.PkgId(UUID("8bf52ea8-c179-5cab-976a-9e18b702a9bc"), "CRC32c"))
isdefined(CairoMakie, :isoband_jll) || const isoband_jll = Base.require(Base.PkgId(UUID("9a68df92-36a6-505f-a73e-abb412b6bfb4"), "isoband_jll"))
isdefined(CairoMakie, :Scratch) || const Scratch = Base.require(Base.PkgId(UUID("6c6a2e73-6563-6170-7368-637461726353"), "Scratch"))
isdefined(CairoMakie, :Pkg) || const Pkg = Base.require(Base.PkgId(UUID("44cfe95a-1eb2-52ea-b672-e2afdf69b78f"), "Pkg"))
isdefined(CairoMakie, :Showoff) || const Showoff = Base.require(Base.PkgId(UUID("992d4aef-0814-514b-bc4d-f2e9a6c4116f"), "Showoff"))
isdefined(CairoMakie, :DensityInterface) || const DensityInterface = Base.require(Base.PkgId(UUID("b429d917-457f-4dbc-8f4c-0cc954292b1d"), "DensityInterface"))
isdefined(CairoMakie, :FFTW_jll) || const FFTW_jll = Base.require(Base.PkgId(UUID("f5851436-0d7a-5f13-b9de-f02708fd171a"), "FFTW_jll"))
isdefined(CairoMakie, :OpenSpecFun_jll) || const OpenSpecFun_jll = Base.require(Base.PkgId(UUID("efe28fd5-8261-553b-a9e1-b2916fc3738e"), "OpenSpecFun_jll"))
isdefined(CairoMakie, :LogExpFunctions) || const LogExpFunctions = Base.require(Base.PkgId(UUID("2ab3a3ac-af41-5b50-aa03-7779005ae688"), "LogExpFunctions"))
isdefined(CairoMakie, :FFMPEG_jll) || const FFMPEG_jll = Base.require(Base.PkgId(UUID("b22a6f82-2f65-5046-a5b2-351ab43fb4e5"), "FFMPEG_jll"))
isdefined(CairoMakie, :StructArrays) || const StructArrays = Base.require(Base.PkgId(UUID("09ab397b-f2b6-538f-b94a-2f83cf4a842a"), "StructArrays"))
isdefined(CairoMakie, :ScanByte) || const ScanByte = Base.require(Base.PkgId(UUID("7b38b023-a4d7-4c5e-8d43-3f3097f304eb"), "ScanByte"))
isdefined(CairoMakie, :FileIO) || const FileIO = Base.require(Base.PkgId(UUID("5789e2e9-d7fb-5bc7-8068-2c6fae9b9549"), "FileIO"))
isdefined(CairoMakie, :Libuuid_jll) || const Libuuid_jll = Base.require(Base.PkgId(UUID("38a345b3-de98-5d2b-a5d3-14cd9215e700"), "Libuuid_jll"))
isdefined(CairoMakie, :FriBidi_jll) || const FriBidi_jll = Base.require(Base.PkgId(UUID("559328eb-81f9-559d-9380-de523a88c83c"), "FriBidi_jll"))
isdefined(CairoMakie, :Colors) || const Colors = Base.require(Base.PkgId(UUID("5ae59095-9a9b-59fe-a467-6f913c188581"), "Colors"))
isdefined(CairoMakie, :Missings) || const Missings = Base.require(Base.PkgId(UUID("e1d29d7a-bbdc-5cf2-9ac0-f12de2c33e28"), "Missings"))

macro precompile(args)
    return quote
        try
            precompile($(args))
        catch e
            println("Could not precompile: ", $(string(args)))
        end
    end
end

@precompile(Tuple{typeof(Base.Libc.time)})
@precompile(Tuple{typeof(Base.:(!=)), UInt64, UInt64})
@precompile(Tuple{typeof(Rmath_jll.__init__)})
@precompile(Tuple{typeof(Rmath_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Base.invokelatest), Any})
@precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
@precompile(Tuple{typeof(Base.rand)})
@precompile(Tuple{typeof(Base.randn)})
@precompile(Tuple{typeof(Random.randexp)})
@precompile(Tuple{typeof(Rmath.__init__)})
@precompile(Tuple{typeof(OpenLibm_jll.__init__)})
@precompile(Tuple{typeof(DocStringExtensions.__init__)})
@precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
@precompile(Tuple{typeof(OpenSpecFun_jll.__init__)})
@precompile(Tuple{typeof(OpenSpecFun_jll.find_artifact_dir)})
@precompile(Tuple{typeof(OpenSSL_jll.__init__)})
@precompile(Tuple{typeof(OpenSSL_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Zlib_jll.__init__)})
@precompile(Tuple{typeof(Libiconv_jll.__init__)})
@precompile(Tuple{typeof(Libiconv_jll.find_artifact_dir)})
@precompile(Tuple{typeof(XML2_jll.__init__)})
@precompile(Tuple{typeof(XML2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Gettext_jll.__init__)})
@precompile(Tuple{typeof(Gettext_jll.find_artifact_dir)})
@precompile(Tuple{typeof(PCRE_jll.__init__)})
@precompile(Tuple{typeof(PCRE_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Libffi_jll.__init__)})
@precompile(Tuple{typeof(Libffi_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Glib_jll.__init__)})
@precompile(Tuple{typeof(Glib_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Bzip2_jll.__init__)})
@precompile(Tuple{typeof(Bzip2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FreeType2_jll.__init__)})
@precompile(Tuple{typeof(FreeType2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libpng_jll.__init__)})
@precompile(Tuple{typeof(libpng_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Graphite2_jll.__init__)})
@precompile(Tuple{typeof(Graphite2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Expat_jll.__init__)})
@precompile(Tuple{typeof(Expat_jll.find_artifact_dir)})
@precompile(Tuple{typeof(LZO_jll.__init__)})
@precompile(Tuple{typeof(LZO_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Pixman_jll.__init__)})
@precompile(Tuple{typeof(Pixman_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Fontconfig_jll.__init__)})
@precompile(Tuple{typeof(Fontconfig_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Base.getindex), Base.EnvDict, String})
@precompile(Tuple{typeof(Cairo_jll.__init__)})
@precompile(Tuple{typeof(Cairo_jll.find_artifact_dir)})
@precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
@precompile(Tuple{typeof(HarfBuzz_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FriBidi_jll.__init__)})
@precompile(Tuple{typeof(FriBidi_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libass_jll.__init__)})
@precompile(Tuple{typeof(libass_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Requires.__init__)})
@precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
@precompile(Tuple{typeof(ArrayInterface.__init__)})
@precompile(Tuple{typeof(Requires.isprecompiling)})
@precompile(Tuple{typeof(Base.:(==)), Int32, Int64})
@precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
@precompile(Tuple{typeof(Requires.loaded), Base.PkgId})
@precompile(Tuple{ArrayInterface.var"#41#68"})
@precompile(Tuple{typeof(Requires.withpath), Any, String})
@precompile(Tuple{typeof(Base.task_local_storage)})
@precompile(Tuple{typeof(Base.haskey), Base.IdDict{Any, Any}, Symbol})
@precompile(Tuple{typeof(Base.something), String, String, Vararg{String}})
@precompile(Tuple{ArrayInterface.var"#42#69"})
@precompile(Tuple{typeof(Requires.err), Any, Module, String, String, Any})
@precompile(Tuple{ArrayInterface.var"#43#70"})
@precompile(Tuple{typeof(Base.require), Base.PkgId})
@precompile(Tuple{typeof(Base.getindex), Base.RefValue{Base.CoreLogging.LogLevel}})
@precompile(Tuple{typeof(Base.:(>=)), Base.CoreLogging.LogLevel, Base.CoreLogging.LogLevel})
@precompile(Tuple{typeof(Base.isassigned), Base.RefValue{Symbol}})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Symbol}, Symbol})
@precompile(Tuple{typeof(Requires.withnotifications), Any, Vararg{Any}})
@precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}})
@precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}, Int64})
@precompile(Tuple{typeof(Requires.callbacks), Base.PkgId})
@precompile(Tuple{typeof(Ratios.__init__)})
@precompile(Tuple{typeof(Base.getindex), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
@precompile(Tuple{typeof(Base.foreach), typeof(Base.invokelatest), Array{Function, 1}})
@precompile(Tuple{ArrayInterface.var"#44#71"})
@precompile(Tuple{ArrayInterface.var"#45#72"})
@precompile(Tuple{ArrayInterface.var"#46#73"})
@precompile(Tuple{typeof(Base.getindex), Base.RefValue{Symbol}})
@precompile(Tuple{ArrayInterface.var"#99#103"})
@precompile(Tuple{ArrayInterface.var"#100#104"})
@precompile(Tuple{ArrayInterface.var"#101#105"})
@precompile(Tuple{ArrayInterface.var"#65#92"})
@precompile(Tuple{ArrayInterface.var"#66#93"})
@precompile(Tuple{ArrayInterface.var"#67#94"})
@precompile(Tuple{typeof(Interpolations.__init__)})
@precompile(Tuple{typeof(EarCut_jll.__init__)})
@precompile(Tuple{typeof(EarCut_jll.find_artifact_dir)})
@precompile(Tuple{Ratios.var"#9#12"})
@precompile(Tuple{Ratios.var"#10#13"})
@precompile(Tuple{Ratios.var"#11#14"})
@precompile(Tuple{typeof(ColorTypes.__init__)})
@precompile(Tuple{typeof(FileIO.__init__)})
@precompile(Tuple{typeof(isoband_jll.__init__)})
@precompile(Tuple{typeof(isoband_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Pango_jll.__init__)})
@precompile(Tuple{typeof(Pango_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FFTW_jll.__init__)})
@precompile(Tuple{typeof(FFTW_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FFTW.spawnloop), Ptr{Nothing}, Ptr{Nothing}, UInt64, Int32, Ptr{Nothing}})
@precompile(Tuple{typeof(FFTW.__init__)})
@precompile(Tuple{typeof(ColorVectorSpace.__init__)})
@precompile(Tuple{typeof(libfdk_aac_jll.__init__)})
@precompile(Tuple{typeof(libfdk_aac_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FreeTypeAbstraction.__init__)})
@precompile(Tuple{typeof(LAME_jll.__init__)})
@precompile(Tuple{typeof(LAME_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Parsers.__init__)})
@precompile(Tuple{typeof(Ogg_jll.__init__)})
@precompile(Tuple{typeof(Ogg_jll.find_artifact_dir)})
@precompile(Tuple{typeof(x265_jll.__init__)})
@precompile(Tuple{typeof(x265_jll.find_artifact_dir)})
@precompile(Tuple{typeof(x264_jll.__init__)})
@precompile(Tuple{typeof(x264_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libvorbis_jll.__init__)})
@precompile(Tuple{typeof(libvorbis_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Opus_jll.__init__)})
@precompile(Tuple{typeof(Opus_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FFMPEG_jll.__init__)})
@precompile(Tuple{typeof(FFMPEG_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Makie.MakieLayout.__init__)})
@precompile(Tuple{typeof(Makie.__init__)})
@precompile(Tuple{typeof(Base.empty!), Base.Dict{String, FreeTypeAbstraction.FTFont}})
@precompile(Tuple{typeof(CairoMakie.__init__)})
@precompile(Tuple{typeof(MakieCore.scatter), Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.deepcopy_internal), Symbol, Base.IdDict{Any, Any}})
@precompile(Tuple{typeof(Base.deepcopy_internal), Tuple{Int64, Int64}, Base.IdDict{Any, Any}})
@precompile(Tuple{typeof(Base.deepcopy_internal), UnionAll, Base.IdDict{Any, Any}})
@precompile(Tuple{typeof(Base.deepcopy_internal), Array{ColorTypes.RGBA{Float32}, 1}, Base.IdDict{Any, Any}})
@precompile(Tuple{typeof(Base.deepcopy_internal), Array{Symbol, 1}, Base.IdDict{Any, Any}})
@precompile(Tuple{typeof(Base.similar), Array{Symbol, 1}})
@precompile(Tuple{typeof(Base.deepcopy_internal), Array{Union{Nothing, Symbol}, 1}, Base.IdDict{Any, Any}})
@precompile(Tuple{typeof(Base.similar), Array{Union{Nothing, Symbol}, 1}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:camera,), Tuple{typeof(Makie.campixel!)}}, NamedTuple{(), Tuple{}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:camera,), Tuple{typeof(Makie.campixel!)}}, Type{Makie.Scene}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(Base.deepcopy), Base.Dict{Symbol, Any}})
@precompile(Tuple{Type{Makie.SSAO}, Float32, Float32, Int32})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Symbol})
@precompile(Tuple{Type{NamedTuple{(:update,), T} where T<:Tuple}, Tuple{Bool}})
@precompile(Tuple{typeof(Core.Compiler._typename), TypeVar})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_color), Observables.Observable{Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Symbol}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{2, Int64}}, Int64, Int64, Int64, Int64})
@precompile(Tuple{Type{Makie.Camera}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Vararg{Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Vararg{Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Vararg{Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}})
@precompile(Tuple{typeof(Makie.set_proj_view!), Makie.Camera, GeometryBasics.Mat{4, 4, Float32, 16}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(Base.:(*)), Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}, Tuple{Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{typeof(Observables.to_value), Symbol})
@precompile(Tuple{Type{Makie.PointLight}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, ColorTypes.RGB{Float32}})
@precompile(Tuple{typeof(Observables.to_value), ColorTypes.RGB{Float32}})
@precompile(Tuple{Type{Makie.AmbientLight}, ColorTypes.RGB{Float32}})
@precompile(Tuple{typeof(Base.map), Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Observables.Observable{Any}})
@precompile(Tuple{Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Int64})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#2#4"})
@precompile(Tuple{Makie.MakieLayout.var"#1#3"})
@precompile(Tuple{GridLayoutBase.var"##LayoutObservables#104", Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Nothing, Nothing, Nothing, Nothing, Nothing, Type{GridLayoutBase.LayoutObservables{G} where G}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Observables.Observable{GridLayoutBase.VerticalAlignment}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GridLayoutBase.HorizontalAlignment}, Observables.Observable{GridLayoutBase.VerticalAlignment}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.HorizontalAlignment}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.VerticalAlignment}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Bool}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.RectSides{Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Bool, Bool}}})
@precompile(Tuple{typeof(Base.getindex), Tuple, Base.UnitRange{Int64}})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#113#114"{Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Tuple{Bool, Bool}}}}, Tuple{GridLayoutBase.Auto, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#113#114"{Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}, Tuple{GridLayoutBase.Auto, GridLayoutBase.Auto}, Tuple{Nothing, Nothing}, GridLayoutBase.Inside, GridLayoutBase.RectSides{Float32}, Tuple{Bool, Bool}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.Outside}})
@precompile(Tuple{Makie.var"#943#944"{GridLayoutBase.GridLayout}, GridLayoutBase.Outside})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#115#116"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{GridLayoutBase.var"#115#116"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, GeometryBasics.HyperRectangle{2, Float32}, Tuple{Float32, Float32}, Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Base.promote_typejoin), Any, Any})
@precompile(Tuple{typeof(Base.reduce_empty), typeof(Base.:(+)), Type{Tuple{Int64, Union{Union{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto}, GridLayoutBase.Fixed}, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.reduce_empty), typeof(Base.add_sum), Type{Tuple{Int64, Union{Union{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto}, GridLayoutBase.Fixed}, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.BottomRF{typeof(Base.add_sum)}, Type{Tuple{Int64, Union{Union{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto}, GridLayoutBase.Fixed}, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Float32})
@precompile(Tuple{typeof(Base.Broadcast.extrude), Float32})
@precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float32}, Int64})
@precompile(Tuple{typeof(Base.signbit), Float32})
@precompile(Tuple{typeof(Base.getindex), Float32})
@precompile(Tuple{GridLayoutBase.var"#10#11"{GridLayoutBase.GridLayout}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.iterate), Array{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, 1}, Int64})
@precompile(Tuple{GridLayoutBase.var"#67#85"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#68#86"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#71#89"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#72#90"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Tuple{}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Tuple{}})
@precompile(Tuple{Makie.var"##convert_arguments#150", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.scatter, Tuple{Base.UnitRange{Int64}}}}, Base.UnitRange{Int64}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.UnitRange{Int64}}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Tuple{}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Tuple{}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.UnitRange{Int64}}}})
@precompile(Tuple{Type{Base.Val{:plots}}})
@precompile(Tuple{MakieCore.var"##s14#6", Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Val{:current_screens}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, Tuple{Base.UnitRange{Int64}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Base.UnitRange{Int64}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{MakieCore.Billboard{T} where T<:Union{Float32, Array{Float32, 1}}}, Float32})
@precompile(Tuple{Type{Base.Val{18}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.deepcopy), Bool})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :transformation, :model, :visible, :transparency, :overdraw, :diffuse, :specular, :shininess, :nan_color, :ssao, :inspectable, :depth_shift), T} where T<:Tuple}, Tuple{Int64, MakieCore.Automatic, MakieCore.Automatic, Bool, Bool, Bool, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, ColorTypes.RGBA{Float32}, Bool, Bool, Float32}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#47#48", Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, MakieCore.Automatic})
@precompile(Tuple{typeof(MakieCore.value_convert), Any})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:linewidth, :transformation, :model, :visible, :transparency, :overdraw, :diffuse, :specular, :shininess, :nan_color, :ssao, :inspectable, :depth_shift), Tuple{Int64, MakieCore.Automatic, MakieCore.Automatic, Bool, Bool, Bool, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, ColorTypes.RGBA{Float32}, Bool, Bool, Float32}}, Type{MakieCore.Attributes}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Any}})
@precompile(Tuple{Type{NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.deepcopy), Symbol})
@precompile(Tuple{typeof(Base.deepcopy), Type})
@precompile(Tuple{typeof(Base.deepcopy), Int64})
@precompile(Tuple{Type{NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :markerspace, :fxaa, :cycle, :inspectable), T} where T<:Tuple}, Tuple{Symbol, Symbol, MakieCore.Automatic, UnionAll, Int64, Symbol, Int64, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, UnionAll, Bool, Array{Symbol, 1}, Bool}})
@precompile(Tuple{Base.var"##s81#214", Any, Any, Any, Any, Any})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :markerspace, :fxaa, :cycle, :inspectable), Tuple{Symbol, Symbol, MakieCore.Automatic, UnionAll, Int64, Symbol, Int64, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, UnionAll, Bool, Array{Symbol, 1}, Bool}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :markerspace, :fxaa, :cycle, :inspectable), Tuple{Symbol, Symbol, MakieCore.Automatic, UnionAll, Int64, Symbol, Int64, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, UnionAll, Bool, Array{Symbol, 1}, Bool}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#47#48", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :markerspace, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Observables.Observable{Any}, Symbol, Symbol, MakieCore.Automatic, UnionAll, Int64, Symbol, Int64, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, UnionAll, Bool, Array{Symbol, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Any}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Symbol, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Symbol, Float64}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float64, Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float64, Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float64, Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Base.copy), Observables.Observable{Any}})
@precompile(Tuple{Type{Base.Val{:attributes}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, Observables.Observable{Any}, Symbol})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}, Bool})
@precompile(Tuple{typeof(Base.:(==)), MakieCore.Automatic, MakieCore.Automatic})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.var"#118#123", Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#118#123", Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{Type{Base.Val{:converted}}})
@precompile(Tuple{typeof(Base.first), Tuple{Symbol}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}, Symbol})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Base.:(==)), Type, MakieCore.Automatic})
@precompile(Tuple{Makie.var"#653#655"{Makie.var"#652#654", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.getproperty), Makie.Transformation, Symbol})
@precompile(Tuple{Type{Base.Val{:transform_func}}})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Transformation, Base.Val{:transform_func}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.foreach_transformed), Makie.var"#650#651"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Array{GeometryBasics.Point{2, Float32}, 1}, GeometryBasics.Mat{4, 4, Float32, 16}, Function})
@precompile(Tuple{typeof(Base.deepcopy), NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{T} where T}, String})
@precompile(Tuple{typeof(Base.map), typeof(Base.identity), Observables.Observable{String}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{String}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{String}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Float32})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{T} where T}, Symbol})
@precompile(Tuple{typeof(Base.map), typeof(Base.identity), Observables.Observable{Symbol}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Symbol}})
@precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Pair{Symbol, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}}, Vararg{Pair{A, B} where B where A}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Symbol}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Nothing, Nothing}}}}, Function, Tuple{Tuple{Nothing, Nothing}}, Nothing})
@precompile(Tuple{typeof(Base.axes), Tuple})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Nothing, Nothing}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Nothing, Nothing}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{String}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{String}})
@precompile(Tuple{typeof(MakieCore.value_convert), NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float32, Float32}}})
@precompile(Tuple{Type{GridLayoutBase.RectSides{Float32}}, Int64, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{GridLayoutBase.RectSides{Float32}}, GridLayoutBase.RectSides{Float32}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}}}, Function, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{2, Float32}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.HyperRectangle{2, Float32}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:suggestedbbox, :protrusions), Tuple{Nothing, Observables.Observable{GridLayoutBase.RectSides{Float32}}}}, Type{GridLayoutBase.LayoutObservables{G} where G}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{GridLayoutBase.var"##LayoutObservables#104", Nothing, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Nothing, Nothing, Nothing, Nothing, Type{GridLayoutBase.LayoutObservables{G} where G}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Nothing})
@precompile(Tuple{Type{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Nothing})
@precompile(Tuple{typeof(GridLayoutBase.align_shift_tuple), Symbol, Symbol})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Bool, Bool}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(GridLayoutBase.reportedsizeobservable!), Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Tuple{Bool, Bool}}})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#113#114"{Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Tuple{Bool, Bool}}}}, Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Makie.MakieLayout.defaultlimits), Tuple{Nothing, Nothing}, Function, Function})
@precompile(Tuple{typeof(GridLayoutBase.BBox), Float64, Float64, Float64, Float64})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{Makie.var"##Scene#96", Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, Nothing, Makie.PixelCamera, Makie.Transformation, Base.Dict{Symbol, Any}, Array{MakieCore.AbstractScreen, 1}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}, Makie.Scene})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Bool})
@precompile(Tuple{Type{NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), T} where T<:Tuple}, Tuple{Symbol, Bool, Int64, Int64, Symbol, Base.Dict{Symbol, Any}, Symbol, Int64, MakieCore.Automatic, Nothing, String, MakieCore.Automatic, ColorTypes.RGB{Float32}, Symbol, Int64, Symbol, ColorTypes.RGBA{Float32}, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Symbol, Tuple{Int64, Int64}, UnionAll, GeometryBasics.Vec{3, Float32}, Int64, Base.Dict{Symbol, Any}, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}, Symbol, Symbol, Int64, Float64, Bool, MakieCore.Automatic}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Symbol, Bool, Int64, Int64, Symbol, Base.Dict{Symbol, Any}, Symbol, Int64, MakieCore.Automatic, Nothing, String, MakieCore.Automatic, ColorTypes.RGB{Float32}, Symbol, Int64, Symbol, ColorTypes.RGBA{Float32}, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Symbol, Tuple{Int64, Int64}, UnionAll, GeometryBasics.Vec{3, Float32}, Int64, Base.Dict{Symbol, Any}, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}, Symbol, Symbol, Int64, Float64, Bool, MakieCore.Automatic}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Symbol, Bool, Int64, Int64, Symbol, Base.Dict{Symbol, Any}, Symbol, Int64, MakieCore.Automatic, Nothing, String, MakieCore.Automatic, ColorTypes.RGB{Float32}, Symbol, Int64, Symbol, ColorTypes.RGBA{Float32}, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Symbol, Tuple{Int64, Int64}, UnionAll, GeometryBasics.Vec{3, Float32}, Int64, Base.Dict{Symbol, Any}, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}, Symbol, Symbol, Int64, Float64, Bool, MakieCore.Automatic}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Symbol, Bool, Int64, Int64, Symbol, Base.Dict{Symbol, Any}, Symbol, Int64, MakieCore.Automatic, Nothing, String, MakieCore.Automatic, ColorTypes.RGB{Float32}, Symbol, Int64, Symbol, ColorTypes.RGBA{Float32}, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Symbol, Tuple{Int64, Int64}, UnionAll, GeometryBasics.Vec{3, Float32}, Int64, Base.Dict{Symbol, Any}, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}, Symbol, Symbol, Int64, Float64, Bool, MakieCore.Automatic}}})
@precompile(Tuple{Makie.var"#current_default_theme##kw", NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Symbol, Bool, Int64, Int64, Symbol, Base.Dict{Symbol, Any}, Symbol, Int64, MakieCore.Automatic, Nothing, String, MakieCore.Automatic, ColorTypes.RGB{Float32}, Symbol, Int64, Symbol, ColorTypes.RGBA{Float32}, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Symbol, Tuple{Int64, Int64}, UnionAll, GeometryBasics.Vec{3, Float32}, Int64, Base.Dict{Symbol, Any}, NamedTuple{(:color, :patchcolor, :marker, :linestyle, :side), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Array{Symbol, 1}, Array{Union{Nothing, Symbol}, 1}, Array{Symbol, 1}}}, Symbol, Symbol, Int64, Float64, Bool, MakieCore.Automatic}}, typeof(Makie.current_default_theme)})
@precompile(Tuple{Type{NamedTuple{(:color, :inspectable, :shading), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Bool, Bool}})
@precompile(Tuple{MakieCore.var"#mesh!##kw", NamedTuple{(:color, :inspectable, :shading), Tuple{Observables.Observable{Any}, Bool, Bool}}, typeof(MakieCore.mesh!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##mesh!#40", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:color, :inspectable, :shading), Tuple{Observables.Observable{Any}, Bool, Bool}}}, typeof(MakieCore.mesh!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :inspectable, :shading), Tuple{Observables.Observable{Any}, Bool, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, Makie.Scene, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Type{NamedTuple{(:pointtype, :facetype), T} where T<:Tuple}, Tuple{DataType, DataType}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Type{GeometryBasics.UV{T} where T}, Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), GeometryBasics.UV{GeometryBasics.Vec{2, Float32}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Vec{3, Float32}}, Base.Iterators.Take{Base.Iterators.Repeated{Tuple{Int64, Int64, Int64}}}})
@precompile(Tuple{Type{NamedTuple{(:uv, :normals), T} where T<:Tuple}, Tuple{Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:uv, :normals), Tuple{Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:uv, :normals), Tuple{Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#47#48", Type, Type})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:uv, :normals), Tuple{Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.tuple_type_cons), Type{GeometryBasics.Point{2, Float32}}, Type{Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{Base.var"##s77#209", Any, Any, Any})
@precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.UnitRange{Int64}, Base.HasShape{1}})
@precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Int64, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#210#212"{DataType, Array{Int64, 1}}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Base.var"#210#212"{DataType, Array{Int64, 1}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Base.var"#210#212"{DataType, Array{Int64, 1}}}, Int64})
@precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
@precompile(Tuple{GeometryBasics.var"#meta##kw", NamedTuple{(:uv, :normals), Tuple{Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, typeof(GeometryBasics.meta), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{GeometryBasics.Mesh{Dim, T, Element, V} where V<:AbstractArray{Element, 1} where Element<:GeometryBasics.Polytope{Dim, T} where T<:Number where Dim}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, MakieCore.Attributes, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :inspectable, :cycle), T} where T<:Tuple}, Tuple{Symbol, Float32, Symbol, MakieCore.Automatic, Bool, Bool, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :inspectable, :cycle), Tuple{Symbol, Float32, Symbol, MakieCore.Automatic, Bool, Bool, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :inspectable, :cycle), Tuple{Symbol, Float32, Symbol, MakieCore.Automatic, Bool, Bool, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Observables.Observable{Any}, Symbol, Float32, Symbol, MakieCore.Automatic, Bool, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64, Int64, Int64})
@precompile(Tuple{Type{Base.Val{:translation}}})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Transformation, Base.Val{:translation}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#618#619", Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Makie.var"#618#619", GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Makie.Quaternion{Float32}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :visible, :color, :linestyle, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:linewidth, :visible, :color, :linestyle, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linewidth, :visible, :color, :linestyle, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :visible, :color, :linestyle, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Bool})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.deepcopy), Float64})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle, :inspectable), T} where T<:Tuple}, Tuple{Float64, Symbol, Symbol, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}, Bool}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:linewidth, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle, :inspectable), Tuple{Float64, Symbol, Symbol, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}, Bool}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:linewidth, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle, :inspectable), Tuple{Float64, Symbol, Symbol, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}, Bool}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#47#48", Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float64, Observables.Observable{Any}, Bool, Observables.Observable{Any}, Symbol, Symbol, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.notify), Observables.AbstractObservable{T} where T})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#252#283"{Base.RefValue{Union{Nothing, Makie.MakieLayout.Axis}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}, Function})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#254#285"{Makie.Scene}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}, Function})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#256#287", Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Makie.MakieLayout.var"#256#287", Symbol, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#257#288", Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Makie.MakieLayout.var"#257#288", Symbol, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#258#289", Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#258#289", Symbol})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Bool})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Bool}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#259#290", Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#259#290", Symbol})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#260#291", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Bool}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Bool}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#261#292", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#262#293", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#263#294", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#264#295", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Symbol}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Symbol}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#265#296", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#266#297", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#267#298", Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Type{NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :ticklabelsize, :trimspine, :ticksize, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :ticklabelsize, :trimspine, :ticksize, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Type{Makie.MakieLayout.LineAxis}, Makie.Scene})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Bool}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Bool}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#180#211", Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#180#211", Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.MakieLayout.var"#181#212", MakieCore.Automatic, Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool, Float32})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Symbol, Symbol}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.MakieLayout.var"#182#213"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Vararg{Any}})
@precompile(Tuple{typeof(Base.isfinite), Float32})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Float32}, Float32})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Float32}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Float32}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#184#215", Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#184#215", Bool, Float32, Float32})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Float32})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:update,), Tuple{Bool}}, Symbol})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#185#216", Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.MakieLayout.var"#185#216", Float32, Float32, Bool, Float32, Float32, Float32})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#186#217", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Float32}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Float32}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#187#218", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#188#219", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{Type{NamedTuple{(:textsize, :color, :position, :visible, :align, :rotation, :font, :space, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:textsize, :color, :position, :visible, :align, :rotation, :font, :space, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:textsize, :color, :position, :visible, :align, :rotation, :font, :space, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:textsize, :color, :position, :visible, :align, :rotation, :font, :space, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Any}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Float32}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Float32}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, String})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}, String})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{String}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{String}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{String}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{String}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{String}}})
@precompile(Tuple{Type{Base.Val{:textsize}}})
@precompile(Tuple{typeof(Base.isequal), Symbol})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{Symbol}})
@precompile(Tuple{Base.Fix2{typeof(Base.isequal), Symbol}, Symbol})
@precompile(Tuple{Type{Base.Val{:font}}})
@precompile(Tuple{Type{Base.Val{:align}}})
@precompile(Tuple{Type{Base.Val{:rotation}}})
@precompile(Tuple{Type{Base.Val{:justification}}})
@precompile(Tuple{Type{Base.Val{:lineheight}}})
@precompile(Tuple{Type{Base.Val{:color}}})
@precompile(Tuple{Type{Base.Val{:strokecolor}}})
@precompile(Tuple{Type{Base.Val{:strokewidth}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}, MakieCore.Attributes, Tuple{Observables.Observable{Any}}, Observables.Observable{Tuple{String}}})
@precompile(Tuple{Type{Base.Val{13}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}})
@precompile(Tuple{typeof(Base.deepcopy), String})
@precompile(Tuple{Type{NamedTuple{(:color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :offset, :inspectable), T} where T<:Tuple}, Tuple{Symbol, String, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Tuple{Float64, Float64}, Bool}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :offset, :inspectable), Tuple{Symbol, String, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Tuple{Float64, Float64}, Bool}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :offset, :inspectable), Tuple{Symbol, String, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Tuple{Float64, Float64}, Bool}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#47#48", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :offset), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Observables.Observable{Any}, Symbol, String, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Tuple{Float64, Float64}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#975#976", Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#975#976", String, Float32, String, Tuple{Symbol, Symbol}, Float32, MakieCore.Automatic, Float64, Symbol, Tuple{Symbol, Float64}, Int64})
@precompile(Tuple{typeof(FreeTypeAbstraction.safe_free), FreeTypeAbstraction.FTFont})
@precompile(Tuple{typeof(Base.convert), Type{Array{FreeTypeAbstraction.FTFont, 1}}, Array{Any, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Makie.GlyphCollection}, Observables.Observable{String}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Makie.GlyphCollection}, Observables.Observable{String}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{String}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{String}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{Type{NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Makie.GlyphCollection}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Makie.GlyphCollection}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.GlyphCollection}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Makie.GlyphCollection}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Makie.GlyphCollection}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Makie.GlyphCollection}}}, MakieCore.Attributes, Tuple{Observables.Observable{Makie.GlyphCollection}}, Observables.Observable{Tuple{Makie.GlyphCollection}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{String}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Makie.GlyphCollection}}}})
@precompile(Tuple{typeof(MakieCore.theme), Makie.Scene})
@precompile(Tuple{typeof(Base.haskey), Base.Dict{Symbol, Any}, Symbol})
@precompile(Tuple{Type{Base.Val{:model}}})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Transformation, Base.Val{:model}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}})
@precompile(Tuple{Type{Makie.Transformation}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Makie.Transformation}, Makie.Transformation})
@precompile(Tuple{typeof(Base.:(==)), GeometryBasics.Mat{4, 4, Float32, 16}, MakieCore.Automatic})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#189#220", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Type{NamedTuple{(:k_min,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:k_min,), Tuple{Int64}}, Symbol})
@precompile(Tuple{typeof(Makie.MakieLayout._logbase), typeof(Base.log)})
@precompile(Tuple{typeof(Makie.MakieLayout._logbase), typeof(Base.log10)})
@precompile(Tuple{typeof(Makie.MakieLayout._logbase), typeof(Base.log2)})
@precompile(Tuple{Makie.MakieLayout.var"#189#220", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Tuple{Float32, Float32}, MakieCore.Automatic, MakieCore.Automatic, Function})
@precompile(Tuple{typeof(Makie.MakieLayout.get_ticks), MakieCore.Automatic, Function, MakieCore.Automatic, Float32, Float32})
@precompile(Tuple{typeof(Base._array_for), Type{Tuple{Float64, Float64}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Float64, Float64}, 1}, Tuple{Float64, Float64}, Base.Generator{Array{Tuple{Float64, Float64}, 1}, PlotUtils.var"#43#44"{DataType}}, Int64})
@precompile(Tuple{typeof(Base.ceil), Type{Int64}, Float64})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{PlotUtils.var"#45#49", Base.BottomRF{typeof(Base.max)}}, Type{Tuple{Float64, Float64}}})
@precompile(Tuple{Type{Int64}, Float64})
@precompile(Tuple{typeof(Base.isinteger), Float64})
@precompile(Tuple{typeof(PlotUtils.optimize_ticks_typed), Float64, Float64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool, Nothing, Nothing})
@precompile(Tuple{typeof(Base.:(^)), Float64, Int64})
@precompile(Tuple{typeof(Base.:(*)), Int64, Float64})
@precompile(Tuple{typeof(Base.:(<=)), Float64, Float64})
@precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Int64})
@precompile(Tuple{PlotUtils.var"#sigdigits#50"{Int64, Int64}, Int64})
@precompile(Tuple{Type{NamedTuple{(:sigdigits, :base), T} where T<:Tuple}, Tuple{Int64, Int64}})
@precompile(Tuple{Base.var"#round##kw", NamedTuple{(:sigdigits, :base), Tuple{Int64, Int64}}, typeof(Base.round), Float64})
@precompile(Tuple{typeof(Base.:(+)), Float64, Float64, Float64, Float64})
@precompile(Tuple{typeof(Base.:(-)), Float64, Int64})
@precompile(Tuple{typeof(Base.:(>=)), Float64, Float64})
@precompile(Tuple{typeof(Base.isinf), Float64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Float32}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{AbstractString, 1}}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#209#240", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.MakieLayout.var"#209#240", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool, Float32, Bool, Array{GeometryBasics.Point{2, Float32}, 1}, Float32})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}}, typeof(MakieCore.lines!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}}}, typeof(MakieCore.lines!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#210#241"{MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.MakieLayout.var"#210#241"{MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Bool, String, Bool, Float32, Float32, Float32, Float32, Bool, Float32, Float32, String, String})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Any}, Tuple{Float32, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#189#220", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#190#221"{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, MakieCore.Attributes}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Any}}}, Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Makie.MakieLayout.var"#190#221"{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, MakieCore.Attributes}, Tuple{Array{Float64, 1}, Array{String, 1}}, Bool})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Makie.MakieLayout.var"#191#222"{Observables.Observable{Any}}, Tuple{Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Makie.MakieLayout.var"#191#222"{Observables.Observable{Any}}, Tuple{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.Compiler.return_type), Any, DataType})
@precompile(Tuple{typeof(Base.:(<=)), Float32, Float64})
@precompile(Tuple{typeof(Base.:(<=)), Float64, Float32})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Makie.MakieLayout.var"#191#222"{Observables.Observable{Any}}, Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Bool}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Makie.MakieLayout.var"#191#222"{Observables.Observable{Any}}, Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Int64, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{Float32, 1}}, Array{Float64, 1}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#194#225"{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}, MakieCore.Attributes}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}}}, Array{Float32, 1}})
@precompile(Tuple{Makie.MakieLayout.var"#194#225"{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}, MakieCore.Attributes}, Array{Float32, 1}, Makie.MakieLayout.IntervalsBetween})
@precompile(Tuple{typeof(Makie.MakieLayout.get_minor_tickvalues), Makie.MakieLayout.IntervalsBetween, Function, Array{Float32, 1}, Float32, Float32})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#195#226"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes}, Tuple{Observables.Observable{Array{Float32, 1}}}}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float32, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.identity), Tuple{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.identity), Tuple{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.identity), Tuple{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Base.identity), Float32})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float32, 1}, Float32})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Array{Float32, 1}, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float32, 1}, Float32}}, Float32})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float32, 1}, Float32}}, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float32, 1}, Float32}}, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float32, Array{Float32, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Float32, Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float32, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float32, Array{Float32, 1}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Float32, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float32, Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float32, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float32, Array{Float32, 1}}}}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.MakieLayout.var"#196#227"{Float32}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float32, 1}, Makie.MakieLayout.var"#196#227"{Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#198#229"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Makie.MakieLayout.var"#198#229"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}, Float32, Float32, Float32})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.MakieLayout.var"#192#223"{Float32}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float32, 1}, Makie.MakieLayout.var"#192#223"{Float32}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#204#235"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Makie.MakieLayout.var"#204#235"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}, Float32, Float32, Float32})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#209#240", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{AbstractString, 1}}, Array{String, 1}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#203#234"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Float32}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Float32}, Observables.Observable{Any}}}, Array{AbstractString, 1}})
@precompile(Tuple{Makie.MakieLayout.var"#203#234"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Float32}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}, Array{AbstractString, 1}, Float32, Bool})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#182#213"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#183#214"{Observables.Observable{Any}}, Tuple{Observables.Observable{Float32}, Observables.Observable{Any}}}, Float32})
@precompile(Tuple{Makie.MakieLayout.var"#183#214"{Observables.Observable{Any}}, Float32, MakieCore.Automatic})
@precompile(Tuple{Type{NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :space, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :space, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :space, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :space, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcastable), Tuple{Int64}})
@precompile(Tuple{typeof(Base.Broadcast.preprocess_args), Nothing, Tuple{Int64}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.first), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.first), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{String}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{String, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.first), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Array{String, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.last), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Int64}}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{2, Float32}, Int64})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Point{3, Float32}, 1}, GeometryBasics.Point{3, Float32}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Point{3, Float32}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{NamedTuple{(:position,), T} where T<:Tuple}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:position,), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}, MakieCore.Attributes})
@precompile(Tuple{Type{NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:position,), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}, NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:position, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:position, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:position, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{String, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{String, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{String, 1}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{String, 1}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{String, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{String, 1}}}, Observables.Observable{Tuple{Array{String, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}}})
@precompile(Tuple{Type{Base.Val{:position}}})
@precompile(Tuple{Type{Base.Val{:offset}}})
@precompile(Tuple{Type{Base.Val{:space}}})
@precompile(Tuple{Type{Base.Val{:visible}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Base.Val{:attributes}})
@precompile(Tuple{typeof(Base.getindex), MakieCore.Attributes, Symbol})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Array{String, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#6", Bool, typeof(Observables.onany), Any, Observables.Observable{Array{String, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{String, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#977#979"{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Array{String, 1}})
@precompile(Tuple{Makie.var"#977#979"{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Array{String, 1}, Float32, Array{GeometryBasics.Point{3, Float32}, 1}, String, Tuple{Symbol, Symbol}, Float32, MakieCore.Automatic, Float64, Symbol, Tuple{Symbol, Float64}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Array{String, 1}})
@precompile(Tuple{typeof(Base.maximum), Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.any), Function, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base._any), Makie.var"#32#33"{Int64}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}, Base.Colon})
@precompile(Tuple{typeof(Base.in), Int64, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{String, 1}, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64}, Int64}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Array{String, 1}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Float32, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), FreeTypeAbstraction.FTFont, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Tuple{Symbol, Symbol}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Makie.Quaternion{Float32}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Float64, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), ColorTypes.RGBA{Float32}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Int64, Int64})
@precompile(Tuple{Makie.var"#978#980"{Array{Makie.GlyphCollection, 1}}, String, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64})
@precompile(Tuple{Type{NamedTuple{(:position, :rotation, :model, :offset, :space, :visible), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:position, :rotation, :model, :offset, :space, :visible), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:position, :rotation, :model, :offset, :space, :visible), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:position, :rotation, :model, :offset, :space, :visible), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(Observables.on), Any, Observables.AbstractObservable{T} where T})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#182#213"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Bool})
@precompile(Tuple{typeof(Makie.boundingbox), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}})
@precompile(Tuple{typeof(Makie.point_iterator), MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}})
@precompile(Tuple{typeof(Makie.point_iterator), MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Array{GeometryBasics.Point{3, Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.to_ndim), Tuple{Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}, Array{GeometryBasics.Point{3, Float32}, 1}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Makie.to_ndim), Tuple{Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}, Array{GeometryBasics.Point{3, Float32}, 1}, Int64}}})
@precompile(Tuple{typeof(Makie.to_rotation), Makie.Quaternion{Float32}})
@precompile(Tuple{typeof(Makie.boundingbox), Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}}}})
@precompile(Tuple{typeof(Base.maximum), Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.any), Function, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base._any), Makie.var"#32#33"{Int64}, Tuple{Int64, Int64, Int64}, Base.Colon})
@precompile(Tuple{typeof(Base.in), Int64, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float32}}, Int64}}})
@precompile(Tuple{Makie.var"#715#716", Makie.GlyphCollection, GeometryBasics.Point{3, Float32}, Makie.Quaternion{Float32}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{N, T} where T where N}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Makie.foreach_transformed), Makie.var"#650#651"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Array{GeometryBasics.Point{3, Float32}, 1}, GeometryBasics.Mat{4, 4, Float32, 16}, Function})
@precompile(Tuple{Type{GeometryBasics.Vec{4, Float32}}, Float64, Float64, Float64, Float64})
@precompile(Tuple{Type{GeometryBasics.Vec{4, Float32}}, Float32})
@precompile(Tuple{typeof(Base.tail), Tuple{Float32, Float32, Float32, Float32}})
@precompile(Tuple{typeof(Base.tail), Tuple{Float32, Float32, Float32}})
@precompile(Tuple{typeof(Base.:(*)), Float32, Float32})
@precompile(Tuple{typeof(Base.:(*)), GeometryBasics.Mat{4, 4, Float32, 16}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{2, Float32}}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(GridLayoutBase.height), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#185#216", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Float32})
@precompile(Tuple{Observables.var"#10#11"{Makie.MakieLayout.var"#185#216", Observables.Observable{Float32}}, Float32, Vararg{Any}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#186#217", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Float32}}}, Float32})
@precompile(Tuple{Makie.MakieLayout.var"#186#217", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool, Float32})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Observables.var"#1#2"{Observables.Observable{Any}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#203#234"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Float32}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Float32}, Observables.Observable{Any}}}, Float32})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Makie.var"#981#982"{MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{String, 1}}, Symbol, Array{String, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#1#2"{Observables.Observable{Any}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#977#979"{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{Makie.GlyphCollection, 1}}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{Type{Base.Val{12}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#210#241"{MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Float32})
@precompile(Tuple{Observables.var"#10#11"{Makie.MakieLayout.var"#210#241"{MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Observables.Observable{Float32}}, Bool, Vararg{Any}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#185#216", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Bool})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#210#241"{MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Bool})
@precompile(Tuple{Observables.var"#1#2"{Observables.Observable{Any}}, Bool})
@precompile(Tuple{Type{Makie.MakieLayout.LineAxis}, Makie.Scene, Observables.Observable{Float32}, MakieCore.Attributes, Base.Dict{Symbol, Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{Type{NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :trimspine, :ticklabelsize, :ticksize, :flip_vertical_label, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :trimspine, :ticklabelsize, :ticksize, :flip_vertical_label, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Type{Makie.MakieLayout.LineAxis}, Makie.Scene})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.MakieLayout.var"#197#228"{Float32}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float32, 1}, Makie.MakieLayout.var"#197#228"{Float32}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.MakieLayout.var"#193#224"{Float32}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float32, 1}, Makie.MakieLayout.var"#193#224"{Float32}}})
@precompile(Tuple{typeof(GridLayoutBase.width), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#269#300", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#269#300", GeometryBasics.HyperRectangle{2, Int64}, Float32, Symbol})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Array{GeometryBasics.Point{2, Float64}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#270#301", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#270#301", GeometryBasics.HyperRectangle{2, Int64}, Float32, Symbol})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Bool, Nothing}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Bool, Nothing}}, typeof(MakieCore.lines!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Bool, Nothing}}}, typeof(MakieCore.lines!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Symbol}, Bool, Nothing}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}})
@precompile(Tuple{Makie.var"##convert_arguments#150", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}}, Array{GeometryBasics.Point{2, Float64}, 1}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#275#306", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}}})
@precompile(Tuple{Makie.MakieLayout.var"#275#306", GeometryBasics.HyperRectangle{2, Int64}, Float32, Symbol, Symbol, Float32})
@precompile(Tuple{Type{Observables.Observable{T} where T}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}}, Bool})
@precompile(Tuple{typeof(Base.map), Makie.MakieLayout.var"#276#307", Observables.Observable{Any}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}})
@precompile(Tuple{Type{NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :space, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :space, :inspectable), Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :space, :inspectable), Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :space, :inspectable), Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Any}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{Makie.var"#975#976", String, Float32, String, Tuple{Symbol, Symbol}, Float64, MakieCore.Automatic, Float64, Symbol, Tuple{Symbol, Float64}, Int64})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Any}, String})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{String}}}, Tuple{Observables.Observable{Any}}}, String})
@precompile(Tuple{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{String}}}, String})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{String}}, Tuple{String}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{String}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{String}}}}, Tuple{String}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{String}}, Tuple{Observables.Observable{Tuple{String}}}}, Tuple{String}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{String}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{String}, String})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#975#976", Observables.Observable{Makie.GlyphCollection}}, Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, String})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Makie.GlyphCollection}, Makie.GlyphCollection})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{Makie.GlyphCollection}}}, Tuple{Observables.Observable{Makie.GlyphCollection}}}, Makie.GlyphCollection})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Makie.GlyphCollection}}, Tuple{Makie.GlyphCollection}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{Makie.GlyphCollection}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Makie.GlyphCollection}}}}, Tuple{Makie.GlyphCollection}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Makie.GlyphCollection}}}, Makie.GlyphCollection})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Makie.GlyphCollection}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{Makie.GlyphCollection}}, Tuple{Observables.Observable{Tuple{Makie.GlyphCollection}}}}, Tuple{Makie.GlyphCollection}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{Makie.GlyphCollection}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#277#309"{Makie.MakieLayout.var"#compute_protrusions#308"{MakieCore.Combined{MakieCore.text, Tuple{String}}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}}}, String})
@precompile(Tuple{Makie.MakieLayout.var"#277#309"{Makie.MakieLayout.var"#compute_protrusions#308"{MakieCore.Combined{MakieCore.text, Tuple{String}}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}}, String, Vararg{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#compute_protrusions#308"{MakieCore.Combined{MakieCore.text, Tuple{String}}}, String, Float32, Float32, Bool, Float32, Bool, Bool, Bool, Bool, Float32, Float32, Symbol, Symbol})
@precompile(Tuple{Type{GridLayoutBase.RectSides{Float32}}, Float32, Float32, Float32, Float32})
@precompile(Tuple{typeof(Base.tail), Tuple{Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#105#106"{Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Any}}}, GridLayoutBase.RectSides{Float32}})
@precompile(Tuple{GridLayoutBase.var"#105#106"{Observables.Observable{GridLayoutBase.RectSides{Float32}}}, GridLayoutBase.RectSides{Float32}, GridLayoutBase.Inside})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#113#114"{Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Tuple{Bool, Bool}}}}, GridLayoutBase.RectSides{Float32}})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#115#116"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}}, Tuple{Nothing, Nothing}})
@precompile(Tuple{GridLayoutBase.var"#115#116"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, GeometryBasics.HyperRectangle{2, Float32}, Tuple{Float32, Float32}, Tuple{Nothing, Nothing}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#109#110"{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Makie.MakieLayout.var"#109#110"{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, GeometryBasics.HyperRectangle{2, Float32}, GeometryBasics.HyperRectangle{2, Float32}, Nothing})
@precompile(Tuple{Observables.var"#7#8"{GridLayoutBase.var"#115#116"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.MakieLayout.ScrollEvent}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.MakieLayout.KeysEvent}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Bool})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}})
@precompile(Tuple{Observables.var"##map!#9", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Int64, 2}}})
@precompile(Tuple{typeof(Observables._onany), Any, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Bool})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64, Int64, Int64})
@precompile(Tuple{Makie.MakieLayout.var"#280#313"{Makie.MakieLayout.Axis}, Tuple{Nothing, Nothing}})
@precompile(Tuple{Makie.var"#653#655"{Makie.MakieLayout.var"#exclude#341"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Observables.to_value), Bool})
@precompile(Tuple{Type{Base.Val{:xscale}}})
@precompile(Tuple{Type{Base.Val{:xautolimitmargin}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:xautolimitmargin}})
@precompile(Tuple{Type{Base.Val{:yscale}}})
@precompile(Tuple{Type{Base.Val{:yautolimitmargin}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:yautolimitmargin}})
@precompile(Tuple{typeof(Base.:(<=)), Float32, Float32})
@precompile(Tuple{typeof(GridLayoutBase.BBox), Float32, Float32, Float32, Float32})
@precompile(Tuple{Makie.MakieLayout.var"#253#284"{MakieCore.Attributes}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Makie.MakieLayout.validate_limits_for_scales), GeometryBasics.HyperRectangle{2, Float32}, Function, Function})
@precompile(Tuple{typeof(Base._all), Makie.MakieLayout.var"#317#318"{typeof(Base.identity)}, Tuple{Float32, Float32}, Base.Colon})
@precompile(Tuple{Makie.MakieLayout.var"#281#314"{Array{Makie.MakieLayout.Axis, 1}, Array{Makie.MakieLayout.Axis, 1}, Observables.Observable{Bool}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.intersect!), Base.Set{Makie.MakieLayout.Axis}, Array{Makie.MakieLayout.Axis, 1}})
@precompile(Tuple{typeof(Base.vectorfilter), Type, Base.var"#129#130"{typeof(Base.in), typeof(Base.pop!), Base.Set{Makie.MakieLayout.Axis}}, Array{Makie.MakieLayout.Axis, 1}})
@precompile(Tuple{typeof(Base.collect), Type{Makie.MakieLayout.Axis}, Base.Generator{Base.Iterators.Filter{Base.var"#131#132"{Base.var"#129#130"{typeof(Base.in), typeof(Base.pop!), Base.Set{Makie.MakieLayout.Axis}}}, Array{Makie.MakieLayout.Axis, 1}}, typeof(Base.identity)}})
@precompile(Tuple{typeof(Base.setdiff!), Base.Set{Makie.MakieLayout.Axis}, Array{Makie.MakieLayout.Axis, 1}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#282#315"{Makie.MakieLayout.Axis}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#255#286"{Makie.Scene}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Makie.MakieLayout.var"#255#286"{Makie.Scene}, GeometryBasics.HyperRectangle{2, Float32}, Bool, Bool, Tuple{typeof(Base.identity), typeof(Base.identity)}})
@precompile(Tuple{Makie.MakieLayout.var"#268#299"{Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(Makie.MakieLayout._selection_vertices), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Base.getproperty), Makie.MakieLayout.Axis, Symbol})
@precompile(Tuple{Type{Base.Val{:parent}}})
@precompile(Tuple{typeof(Base.in), Makie.MakieLayout.Axis, Array{Any, 1}})
@precompile(Tuple{typeof(Base.isnothing), Function})
@precompile(Tuple{typeof(GridLayoutBase.protrusionsobservable), Makie.MakieLayout.Axis})
@precompile(Tuple{typeof(GridLayoutBase.reportedsizeobservable), Makie.MakieLayout.Axis})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, GridLayoutBase.Col, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.MakieLayout.Axis, GridLayoutBase.Col, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, GridLayoutBase.Row, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.MakieLayout.Axis, GridLayoutBase.Row, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.protrusion), Makie.MakieLayout.Axis, GridLayoutBase.Left})
@precompile(Tuple{typeof(GridLayoutBase.protrusion), Makie.MakieLayout.Axis, GridLayoutBase.Right})
@precompile(Tuple{typeof(GridLayoutBase.protrusion), Makie.MakieLayout.Axis, GridLayoutBase.Bottom})
@precompile(Tuple{typeof(GridLayoutBase.protrusion), Makie.MakieLayout.Axis, GridLayoutBase.Top})
@precompile(Tuple{typeof(GridLayoutBase.suggestedbboxobservable), Makie.MakieLayout.Axis})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#97#98", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Makie.var"#97#98", GeometryBasics.HyperRectangle{2, Int64}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#196#198", Observables.Observable{GeometryBasics.Mat{4, 4, Float32, 16}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Makie.var"#196#198", GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#197#199", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Makie.var"#197#199", GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Vec{2, Float32}}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#256#287", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#10#11"{Makie.MakieLayout.var"#256#287", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Symbol, Vararg{Any}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#180#211", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Tuple{Observables.Observable{Any}}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Observables.var"#10#11"{Makie.MakieLayout.var"#180#211", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#181#212", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Observables.var"#10#11"{Makie.MakieLayout.var"#181#212", Observables.Observable{Tuple{Symbol, Symbol}}}, MakieCore.Automatic, Vararg{Any}})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Observables.var"#1#2"{Observables.Observable{Any}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#977#979"{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#186#217", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Float32}}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#187#218", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Makie.MakieLayout.var"#187#218", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool, Bool})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#975#976", Observables.Observable{Makie.GlyphCollection}}, Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#188#219", Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Makie.MakieLayout.var"#188#219", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, Float32})
@precompile(Tuple{Observables.var"#1#2"{Observables.Observable{Any}}, Float32})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#975#976", Observables.Observable{Makie.GlyphCollection}}, Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Float32})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#189#220", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Makie.MakieLayout.var"#273#304"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene, Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Makie.MakieLayout.var"#271#302"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene, Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#3#4"{Array{String, 1}, Observables.Observable{Array{String, 1}}}, Array{AbstractString, 1}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#209#240", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#257#288", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#10#11"{Makie.MakieLayout.var"#257#288", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Symbol, Vararg{Any}})
@precompile(Tuple{Makie.MakieLayout.var"#274#305"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene, Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Makie.MakieLayout.var"#272#303"{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene, Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#269#300", Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}, Array{GeometryBasics.Point{2, Float64}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}}}, Array{GeometryBasics.Point{2, Float64}, 1}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}, Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}}}, Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float64}, 1}}}}, Array{GeometryBasics.Point{2, Float64}, 1}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#270#301", Observables.Observable{Array{GeometryBasics.Point{2, Float64}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.MakieLayout.var"#275#306", Observables.Observable{GeometryBasics.Point{2, Float64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Point{2, Float64}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Observables.var"#1#2"{Observables.Observable{Any}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#282#315"{Makie.MakieLayout.Axis}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Observables.var"#7#8"{Makie.var"#147#149"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}, Tuple{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Observables.var"#7#8"{Observables.var"#10#11"{Makie.var"#134#136"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Makie.var"#134#136"{Int64}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.setindex!), Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plotsym), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.haskey), MakieCore.Attributes, Symbol})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Attributes, Symbol})
@precompile(Tuple{Type{Base.Val{:cycle}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:cycle}})
@precompile(Tuple{Type{Makie.MakieLayout.Cycle}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Makie.MakieLayout.add_cycle_attributes!), MakieCore.Attributes, Type, Makie.MakieLayout.Cycle, Makie.MakieLayout.Cycler, MakieCore.Attributes})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base._array_for), Type{Array{ColorTypes.RGBA{Float32}, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.ndims), Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Base.Generator{Array{Symbol, 1}, Makie.MakieLayout.var"#329#337"{MakieCore.Attributes}}, Int64})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.MakieLayout.var"#330#338", Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}})
@precompile(Tuple{Type{Tuple}, Base.Generator{Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}, Makie.MakieLayout.var"#330#338"}})
@precompile(Tuple{Type{Base.IteratorsMD.CartesianIndices{N, R} where R<:Tuple{Vararg{Base.OrdinalRange{Int64, Int64}, N}} where N}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.length), Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}})
@precompile(Tuple{typeof(Base.getindex), Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}, Int64})
@precompile(Tuple{Type{Tuple}, Base.IteratorsMD.CartesianIndex{1}})
@precompile(Tuple{typeof(Base.getindex), Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}, Int64})
@precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGBA{Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, ColorTypes.RGBA{Float32}, Symbol})
@precompile(Tuple{Makie.var"#653#655"{Makie.MakieLayout.var"#exclude#341"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.MakieLayout.expandlimits), Tuple{Float32, Float32}, Float32, Float32, typeof(Base.identity)})
@precompile(Tuple{Observables.var"#3#4"{Any, Observables.Observable{Any}}, Tuple{Float32, Float32}})
@precompile(Tuple{Observables.var"#7#8"{Makie.MakieLayout.var"#277#309"{Makie.MakieLayout.var"#compute_protrusions#308"{MakieCore.Combined{MakieCore.text, Tuple{String}}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}}}, Float32})
@precompile(Tuple{GridLayoutBase.var"#13#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}, GridLayoutBase.RectSides{Float32}})
@precompile(Tuple{GridLayoutBase.var"#14#16"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}, Tuple{Nothing, Nothing}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.MakieLayout.Axis, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex_evalf), typeof(Base.round), Type, Int64})
@precompile(Tuple{typeof(Base.round), Type{Int64}, Int64})
@precompile(Tuple{Type{GeometryBasics.Vec{2, Int64}}, Int64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Vec{2, Int64}}, GeometryBasics.Vec{2, Int64}})
@precompile(Tuple{typeof(FileIO.save), String, Makie.FigureAxisPlot})
@precompile(Tuple{typeof(FileIO.match), Base.IOStream, Array{UInt8, 1}})
@precompile(Tuple{Type{FileIO.File{FileIO.DataFormat{:PNG}, Name} where Name}, String})
@precompile(Tuple{typeof(FileIO.save), FileIO.File{FileIO.DataFormat{:PNG}, String}, Makie.FigureAxisPlot})
@precompile(Tuple{typeof(Makie.format2mime), Type{FileIO.DataFormat{:PNG}}})
@precompile(Tuple{Type{Base.Val{:camera}}})
@precompile(Tuple{Type{NamedTuple{(:priority,), T} where T<:Tuple}, Tuple{Int8}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:priority,), Tuple{Int8}}, Symbol})
@precompile(Tuple{typeof(Cairo.write_to_stream_callback), Base.IOContext{Base.IOStream}, Ptr{UInt8}, UInt32})
@precompile(Tuple{typeof(Base.show), Base.IOContext{Base.IOStream}, Base.Multimedia.MIME{Symbol("image/png")}, Makie.Scene})
@precompile(Tuple{Type{NamedTuple{(:device_scaling_factor,), T} where T<:Tuple}, Tuple{Float64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:device_scaling_factor,), Tuple{Float64}}, Type{CairoMakie.CairoScreen{S} where S}, Makie.Scene})
@precompile(Tuple{typeof(Base.iterate), GeometryBasics.Vec{2, Int64}})
@precompile(Tuple{typeof(Base.iterate), GeometryBasics.Vec{2, Int64}, Int64})
@precompile(Tuple{typeof(Graphics.rectangle), Cairo.CairoContext, Int64, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{Float32}, Float32})
@precompile(Tuple{Type{Base.Val{:transformation}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.getindex), GeometryBasics.Vec{3, Float32}, Int64})
@precompile(Tuple{typeof(Makie.zvalue2d), Makie.Scene})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{String}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol})
@precompile(Tuple{typeof(Base.:(!=)), Makie.Scene, Makie.Scene})
@precompile(Tuple{Type{GeometryBasics.Vec{4, Float32}}, Int64})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(CairoMakie.draw_atomic), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType})
@precompile(Tuple{typeof(Base.getindex), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(MakieCore.get_attribute), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol})
@precompile(Tuple{Type{MakieCore.Key{:color}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Symbol, MakieCore.Key{:color}})
@precompile(Tuple{typeof(Base.hasproperty), GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Symbol})
@precompile(Tuple{typeof(Makie.to_color), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose_uv), GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:uv, :normals), Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :uv, :normals), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol, Nothing})
@precompile(Tuple{typeof(Makie.to_colormap), Nothing})
@precompile(Tuple{typeof(CairoMakie.per_face_colors), ColorTypes.RGBA{Float32}, Nothing, Nothing, Nothing, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}, Nothing, Array{GeometryBasics.Vec{2, Float32}, 1}})
@precompile(Tuple{typeof(CairoMakie.draw_mesh2D), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, CairoMakie.FaceIterator{:Const, ColorTypes.RGBA{Float32}, Array{GeometryBasics.Point{2, Float32}, 1}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Point{2, Float32}, Float32})
@precompile(Tuple{typeof(Base.iterate), GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(Base.iterate), GeometryBasics.Vec{2, Float32}, Int64})
@precompile(Tuple{typeof(Cairo.mesh_pattern_move_to), Cairo.CairoPattern, Float32, Float32})
@precompile(Tuple{typeof(Cairo.mesh_pattern_line_to), Cairo.CairoPattern, Float32, Float32})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol})
@precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoPattern})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), ColorTypes.RGBA{Float32}, MakieCore.Key{:color}})
@precompile(Tuple{Type{MakieCore.Key{:linewidth}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Float32, MakieCore.Key{:linewidth}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Nothing, MakieCore.Key{:linestyle}})
@precompile(Tuple{typeof(Base.isempty), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{Ref{T} where T}, GeometryBasics.Mat{4, 4, Float32, 16}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.RefValue{Makie.Scene}, Array{GeometryBasics.Point{2, Float32}, 1}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(CairoMakie.project_position), Tuple{Base.RefValue{Makie.Scene}, Array{GeometryBasics.Point{2, Float32}, 1}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(CairoMakie.project_position), Tuple{Base.RefValue{Makie.Scene}, Array{GeometryBasics.Point{2, Float32}, 1}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}}}})
@precompile(Tuple{typeof(Graphics.set_line_width), Cairo.CairoContext, Float32})
@precompile(Tuple{typeof(ColorTypes.red), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(ColorTypes.green), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(ColorTypes.blue), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(ColorTypes.alpha), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Graphics.set_source_rgba), Cairo.CairoContext, Float32, Float32, Float32, Float32})
@precompile(Tuple{typeof(CairoMakie.draw_single), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Cairo.CairoContext, Array{GeometryBasics.Vec{2, Float32}, 1}})
@precompile(Tuple{typeof(Graphics.move_to), Cairo.CairoContext, Float32, Float32})
@precompile(Tuple{typeof(Graphics.line_to), Cairo.CairoContext, Float32, Float32})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.text, Tuple{String}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{MakieCore.text, Tuple{String}}, Symbol})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.text, Tuple{String}}})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.text, Tuple{Makie.GlyphCollection}}})
@precompile(Tuple{Type{MakieCore.Key{:rotation}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Float32, MakieCore.Key{:rotation}})
@precompile(Tuple{Type{MakieCore.Key{:model}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), GeometryBasics.Mat{4, 4, Float32, 16}, MakieCore.Key{:model}})
@precompile(Tuple{Type{MakieCore.Key{:space}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Symbol, MakieCore.Key{:space}})
@precompile(Tuple{Type{MakieCore.Key{:offset}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Tuple{Float64, Float64}, MakieCore.Key{:offset}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Makie.GlyphCollection}})
@precompile(Tuple{typeof(CairoMakie.remove_billboard), Makie.Quaternion{Float32}})
@precompile(Tuple{Type{Cairo.CairoMatrix}, Float64, Float64, Float64, Float64, Float64, Float64})
@precompile(Tuple{typeof(Base.convert), Type{Cairo.CairoMatrix}, Cairo.CairoMatrix})
@precompile(Tuple{Type{GeometryBasics.Point{3, Float32}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Float32, Float32, Float32}})
@precompile(Tuple{Type{Float32}, Float32})
@precompile(Tuple{Type{GeometryBasics.Vec{N, T} where T where N}, Int64, Int64})
@precompile(Tuple{typeof(Base.copysign), Float32, Float32})
@precompile(Tuple{Type{Base.IteratorsMD.CartesianIndices{N, R} where R<:Tuple{Vararg{Base.OrdinalRange{Int64, Int64}, N}} where N}, Tuple{Int64, Int64}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#192#193"{GeometryBasics.var"#3#4"{Float32, Base.IteratorsMD.CartesianIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}}}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Base.var"#192#193"{GeometryBasics.var"#3#4"{Float32, Base.IteratorsMD.CartesianIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}}}}, Base.HasShape{1}})
@precompile(Tuple{typeof(Base.getindex), Base.IteratorsMD.CartesianIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}, Int64})
@precompile(Tuple{Type{Tuple}, Base.IteratorsMD.CartesianIndex{2}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.error)})
@precompile(Tuple{Type{ColorTypes.RGBA{Float32}}, Int64, Int64, Int64, Int64})
@precompile(Tuple{typeof(CairoMakie.draw_glyph_collection), Makie.Scene, Cairo.CairoContext, GeometryBasics.Point{2, Float32}, Makie.GlyphCollection, Makie.Quaternion{Float32}, GeometryBasics.Mat{4, 4, Float32, 16}, Symbol, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Array{Char, 1}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Array{FreeTypeAbstraction.FTFont, 1}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Makie.ScalarOrVector{Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Makie.ScalarOrVector{Float32}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.maximum), Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.any), Function, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base._any), Makie.var"#32#33"{Int64}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}, Base.Colon})
@precompile(Tuple{typeof(Base.in), Int64, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Symbol})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.text, Tuple{Array{String, 1}}}})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Makie.Quaternion{Float32}, MakieCore.Key{:rotation}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(CairoMakie.draw_glyph_collection), Makie.Scene, Cairo.CairoContext, Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, GeometryBasics.Mat{4, 4, Float32, 16}, Symbol, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Symbol})
@precompile(Tuple{typeof(Base.maximum), Tuple{Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.any), Function, Tuple{Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base._any), Makie.var"#32#33"{Int64}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64}, Base.Colon})
@precompile(Tuple{typeof(Base.in), Int64, Tuple{Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}}, Int64}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Array{GeometryBasics.Point{3, Float32}, 1}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Array{Makie.GlyphCollection, 1}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Symbol, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Tuple{Float64, Float64}, Int64})
@precompile(Tuple{CairoMakie.var"#30#31"{Makie.Scene, Cairo.CairoContext}, GeometryBasics.Point{3, Float32}, Makie.GlyphCollection, Makie.Quaternion{Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{Char, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Makie.ScalarOrVector{Float32}, Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Tuple{Float64, Float64}}, Int64}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Array{Char, 1}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Array{FreeTypeAbstraction.FTFont, 1}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Makie.ScalarOrVector{Makie.Quaternion{Float32}}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Makie.ScalarOrVector{GeometryBasics.Vec{2, Float32}}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Makie.ScalarOrVector{ColorTypes.RGBA{Float32}}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Makie.ScalarOrVector{Float32}, Int64})
@precompile(Tuple{CairoMakie.var"#32#33"{Makie.Scene, Cairo.CairoContext, GeometryBasics.Point{3, Float32}, Base.RefValue{GeometryBasics.Mat{4, 4, Float32, 16}}, Symbol}, Char, GeometryBasics.Point{3, Float32}, FreeTypeAbstraction.FTFont, Makie.Quaternion{Float32}, GeometryBasics.Vec{2, Float32}, ColorTypes.RGBA{Float32}, Float32, ColorTypes.RGBA{Float32}, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Point{3, Float32}, Float32})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Float64, MakieCore.Key{:rotation}})
@precompile(Tuple{typeof(CairoMakie.draw_glyph_collection), Makie.Scene, Cairo.CairoContext, GeometryBasics.Point{2, Float64}, Makie.GlyphCollection, Makie.Quaternion{Float32}, GeometryBasics.Mat{4, 4, Float32, 16}, Symbol, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{MakieCore.Key{:markersize}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Int64, MakieCore.Key{:markersize}})
@precompile(Tuple{Type{MakieCore.Key{:strokecolor}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Symbol, MakieCore.Key{:strokecolor}})
@precompile(Tuple{Type{MakieCore.Key{:strokewidth}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Int64, MakieCore.Key{:strokewidth}})
@precompile(Tuple{Type{MakieCore.Key{:marker}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Type, MakieCore.Key{:marker}})
@precompile(Tuple{Type{MakieCore.Key{:marker_offset}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), GeometryBasics.Vec{2, Float32}, MakieCore.Key{:marker_offset}})
@precompile(Tuple{Type{MakieCore.Key{:rotations}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), MakieCore.Billboard{Float32}, MakieCore.Key{:rotations}})
@precompile(Tuple{Type{MakieCore.Key{:transform_marker}}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), Bool, MakieCore.Key{:transform_marker}})
@precompile(Tuple{typeof(Observables.to_value), FreeTypeAbstraction.FTFont})
@precompile(Tuple{typeof(Makie.to_font), FreeTypeAbstraction.FTFont})
@precompile(Tuple{typeof(Makie.broadcast_foreach), Function, Array{GeometryBasics.Point{2, Float32}, 1}, Vararg{Any}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_length), Tuple{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), Type})
@precompile(Tuple{typeof(Makie.attr_broadcast_length), GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(Base.maximum), Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.any), Function, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base._any), Makie.var"#32#33"{Int64}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}, Base.Colon})
@precompile(Tuple{typeof(Base.in), Int64, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.attr_broadcast_getindex), Tuple{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, UnionAll, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}}, Int64}}})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Array{GeometryBasics.Point{2, Float32}, 1}, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), Type, Int64})
@precompile(Tuple{typeof(Makie.attr_broadcast_getindex), GeometryBasics.Vec{2, Float32}, Int64})
@precompile(Tuple{CairoMakie.var"#28#29"{Makie.Scene, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, FreeTypeAbstraction.FTFont, GeometryBasics.Mat{4, 4, Float32, 16}, GeometryBasics.Mat{4, 4, Float32, 16}, Cairo.CairoContext}, GeometryBasics.Point{2, Float32}, ColorTypes.RGBA{Float32}, Int64, ColorTypes.RGBA{Float32}, Float32, Type, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}})
@precompile(Tuple{typeof(Makie.apply_transform), Tuple{typeof(Base.identity), typeof(Base.identity)}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Int64})
@precompile(Tuple{Type{GeometryBasics.HyperSphere{2, T} where T}, GeometryBasics.Point{2, Float32}, Float32})
@precompile(Tuple{typeof(Makie.to_spritemarker), Type{GeometryBasics.HyperSphere{2, T} where T}})
@precompile(Tuple{typeof(MakieCore.convert_attribute), ColorTypes.RGB{Float32}, MakieCore.Key{:color}})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol})
@precompile(Tuple{typeof(CairoMakie.draw_plot), Makie.Scene, CairoMakie.CairoScreen{Cairo.CairoSurfaceBase{UInt32}}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(CairoMakie.draw_single), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Cairo.CairoContext, Array{GeometryBasics.Vec{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.get), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.Filesystem.rm), String})
@precompile(Tuple{typeof(Base.string), String, Float64, Vararg{Any}})
@precompile(Tuple{typeof(FreeTypeAbstraction.ft_done)})
@precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
@precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceBase{UInt32}})
